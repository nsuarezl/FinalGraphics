class Transform {
  constructor() {
    this.forward = [0, 0, 1];
    this.right = [1, 0, 0];
    this.up = [0, 1, 0];
  }

  doRotations(RotAngles) {
    this.xRot = [
      [1, 0, 0, 0],
      [0, Math.cos(RotAngles[0]), -1 * Math.sin(RotAngles[0]), 0],
      [0, Math.sin(RotAngles[0]), Math.cos(RotAngles[0]), 0],
      [0, 0, 0, 1],
    ];
    this.yRot = [
      [Math.cos(RotAngles[1]), 0, Math.sin(RotAngles[1]), 0],
      [0, 1, 0, 0],
      [-1 * Math.sin(RotAngles[1]), 0, Math.cos(RotAngles[1]), 0],
      [0, 0, 0, 1],
    ];
    this.zRot = [
      [Math.cos(RotAngles[2]), -1 * Math.sin(RotAngles[2]), 0, 0],
      [Math.sin(RotAngles[2]), Math.cos(RotAngles[2]), 0, 0],
      [0, 0, 1, 0],
      [0, 0, 0, 1],
    ];
    //this.forward = this.crossMultiply(xRot,[0,0,1,0]);
    this.forward = this.crossMultiply(
      this.zRot,
      this.crossMultiply(this.yRot, this.crossMultiply(this.xRot, [0, 0, 1, 0]))
    );
    this.right = this.crossMultiply(
      this.zRot,
      this.crossMultiply(this.yRot, this.crossMultiply(this.xRot, [1, 0, 0, 0]))
    );
    this.up = this.crossMultiply(
      this.zRot,
      this.crossMultiply(this.yRot, this.crossMultiply(this.xRot, [0, 1, 0, 0]))
    );
  }
  crossMultiply(M, V) {
    //console.log(M[0][3]);
    //console.log(V[3]);
    var temp = [
      M[0][0] * V[0] + M[0][1] * V[1] + M[0][2] * V[2] + M[0][3] * V[3],
      M[1][0] * V[0] + M[1][1] * V[1] + M[1][2] * V[2] + M[1][3] * V[3],
      M[2][0] * V[0] + M[2][1] * V[1] + M[2][2] * V[2] + M[2][3] * V[3],
      M[3][0] * V[0] + M[3][1] * V[1] + M[3][2] * V[2] + M[3][3] * V[3],
    ];
    //console.log(temp);
    return temp;
  }
}

const Global_Bullet = [ 0x0a, 0xb2, 0xbb, 0xff, 0x0a, 0xb2, 0xbb, 0xff, 0x0a, 0xb2, 0xbb, 0xff, 0x0a, 0xb2, 0xbb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x0a, 0xb2, 0xbb, 0xff, 0x0a, 0xb2, 0xbb, 0xff, 0x0a, 0xb2, 0xbb, 0xff, 
  0x0a, 0xb2, 0xbb, 0xff, 0x0a, 0xb2, 0xbb, 0xff, 0x0a, 0xb2, 0xbb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x0a, 0xb2, 0xbb, 0xff, 0x0a, 0xb2, 0xbb, 0xff, 
  0x0a, 0xb2, 0xbb, 0xff, 0x0a, 0xb2, 0xbb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x0a, 0xb2, 0xbb, 0xff, 0x0a, 0xb2, 0xbb, 0xff, 
  0x0a, 0xb2, 0xbb, 0xff, 0x0a, 0xb2, 0xbb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x0a, 0xb2, 0xbb, 0xff, 
  0x0a, 0xb2, 0xbb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x0a, 0xb2, 0xbb, 0xff, 
  0x0a, 0xb2, 0xbb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 
  0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 
  0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 
  0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 
  0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 
  0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 
  0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 
  0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 
  0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 
  0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 
  0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 
  0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 
  0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 
  0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 
  0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 
  0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 
  0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 
  0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 
  0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 
  0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 
  0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 
  0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 
  0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 
  0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 
  0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 
  0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x0a, 0xb2, 0xbb, 0xff, 0x0a, 0xb2, 0xbb, 0xff, 0x0a, 0xb2, 0xbb, 0xff, 0x0a, 0xb2, 0xbb, 0xff, 0x0a, 0xb2, 0xbb, 0xff, 0x0a, 0xb2, 0xbb, 0xff, 0x0a, 0xb2, 0xbb, 0xff, 0x0a, 0xb2, 0xbb, 0xff, 0x0a, 0xb2, 0xbb, 0xff, 0x0a, 0xb2, 0xbb, 0xff, 0x0a, 0xb2, 0xbb, 0xff, 0x0a, 0xb2, 0xbb, 0xff, 0x0a, 0xb2, 0xbb, 0xff, 0x0a, 0xb2, 0xbb, 0xff, 0x0a, 0xb2, 0xbb, 0xff, 0x0a, 0xb2, 0xbb, 0xff, 0x0a, 0xb2, 0xbb, 0xff, 0x0a, 0xb2, 0xbb, 0xff, 0x0a, 0xb2, 0xbb, 0xff, 0x0a, 0xb2, 0xbb, 0xff, 0x0a, 0xb2, 0xbb, 0xff, 0x0a, 0xb2, 0xbb, 0xff, 0x0a, 0xb2, 0xbb, 0xff, 0x0a, 0xb2, 0xbb, 0xff, 0x0a, 0xb2, 0xbb, 0xff, 0x0a, 0xb2, 0xbb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 
  0x0a, 0xb2, 0xbb, 0xff, 0x0a, 0xb2, 0xbb, 0xff, 0x0a, 0xb2, 0xbb, 0xff, 0x0a, 0xb2, 0xbb, 0xff, 0x0a, 0xb2, 0xbb, 0xff, 0x0a, 0xb2, 0xbb, 0xff, 0x0a, 0xb2, 0xbb, 0xff, 0x0a, 0xb2, 0xbb, 0xff, 0x0a, 0xb2, 0xbb, 0xff, 0x0a, 0xb2, 0xbb, 0xff, 0x0a, 0xb2, 0xbb, 0xff, 0x0a, 0xb2, 0xbb, 0xff, 0x0a, 0xb2, 0xbb, 0xff, 0x0a, 0xb2, 0xbb, 0xff, 0x0a, 0xb2, 0xbb, 0xff, 0x0a, 0xb2, 0xbb, 0xff, 0x0a, 0xb2, 0xbb, 0xff, 0x0a, 0xb2, 0xbb, 0xff, 0x0a, 0xb2, 0xbb, 0xff, 0x0a, 0xb2, 0xbb, 0xff, 0x0a, 0xb2, 0xbb, 0xff, 0x0a, 0xb2, 0xbb, 0xff, 0x0a, 0xb2, 0xbb, 0xff, 0x0a, 0xb2, 0xbb, 0xff, 0x0a, 0xb2, 0xbb, 0xff, 0x0a, 0xb2, 0xbb, 0xff, 0x0a, 0xb2, 0xbb, 0xff, 0x0a, 0xb2, 0xbb, 0xff, 0x0a, 0xb2, 0xbb, 0xff, 0x0a, 0xb2, 0xbb, 0xff, 0x0a, 0xb2, 0xbb, 0xff, 0x0a, 0xb2, 0xbb, 0xff,]

const Global_Tank = [
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0xb7, 0xad, 0x9b, 0xff, 0xb7, 0xad, 0x9b, 0xff, 0xb7, 0xad,
  0x9b, 0xff, 0xb7, 0xad, 0x9b, 0xff, 0xb7, 0xad, 0x9b, 0xff, 0xb7, 0xad, 0x9b,
  0xff, 0xb7, 0xad, 0x9b, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xb7, 0xad,
  0x9b, 0xff, 0xb7, 0xad, 0x9b, 0xff, 0xb7, 0xad, 0x9b, 0xff, 0xb7, 0xad, 0x9b,
  0xff, 0x87, 0x7e, 0x84, 0xff, 0xb7, 0xad, 0x9b, 0xff, 0xb7, 0xad, 0x9b, 0xff,
  0xb7, 0xad, 0x9b, 0xff, 0xb7, 0xad, 0x9b, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xb7, 0xad, 0x9b,
  0xff, 0xb7, 0xad, 0x9b, 0xff, 0xb7, 0xad, 0x9b, 0xff, 0xb7, 0xad, 0x9b, 0xff,
  0x87, 0x7e, 0x84, 0xff, 0xb7, 0xad, 0x9b, 0xff, 0xb7, 0xad, 0x9b, 0xff, 0xb7,
  0xad, 0x9b, 0xff, 0xb7, 0xad, 0x9b, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x52, 0x56, 0x59, 0xff, 0x52, 0x56, 0x59, 0xff, 0xb7, 0xad, 0x9b, 0xff,
  0xb7, 0xad, 0x9b, 0xff, 0xb7, 0xad, 0x9b, 0xff, 0x87, 0x7e, 0x84, 0xff, 0x87,
  0x7e, 0x84, 0xff, 0x87, 0x7e, 0x84, 0xff, 0xb7, 0xad, 0x9b, 0xff, 0xb7, 0xad,
  0x9b, 0xff, 0xb7, 0xad, 0x9b, 0xff, 0x52, 0x56, 0x59, 0xff, 0x52, 0x56, 0x59,
  0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x52, 0x56, 0x59, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0xb7, 0xad, 0x9b, 0xff, 0xb7,
  0xad, 0x9b, 0xff, 0xb7, 0xad, 0x9b, 0xff, 0x87, 0x7e, 0x84, 0xff, 0x52, 0x56,
  0x59, 0xff, 0x87, 0x7e, 0x84, 0xff, 0xb7, 0xad, 0x9b, 0xff, 0xb7, 0xad, 0x9b,
  0xff, 0xb7, 0xad, 0x9b, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x52, 0x56, 0x59, 0xff,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x52, 0x56, 0x59, 0xff, 0x6a,
  0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0xb7, 0xad,
  0x9b, 0xff, 0xb7, 0xad, 0x9b, 0xff, 0xb7, 0xad, 0x9b, 0xff, 0x87, 0x7e, 0x84,
  0xff, 0xb7, 0xad, 0x9b, 0xff, 0xb7, 0xad, 0x9b, 0xff, 0xb7, 0xad, 0x9b, 0xff,
  0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x52,
  0x56, 0x59, 0xff, 0x00, 0x00, 0x00, 0x00, 0x52, 0x56, 0x59, 0xff, 0x6a, 0x6a,
  0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69,
  0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff,
  0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a,
  0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x52, 0x56,
  0x59, 0xff, 0x00, 0x00, 0x00, 0x00, 0x52, 0x56, 0x59, 0xff, 0x52, 0x56, 0x59,
  0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff,
  0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a,
  0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a,
  0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x52, 0x56, 0x59, 0xff, 0x52, 0x56, 0x59,
  0xff, 0x00, 0x00, 0x00, 0x00, 0x52, 0x56, 0x59, 0xff, 0x52, 0x56, 0x59, 0xff,
  0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a,
  0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a,
  0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69,
  0xff, 0x6a, 0x6a, 0x69, 0xff, 0x52, 0x56, 0x59, 0xff, 0x52, 0x56, 0x59, 0xff,
  0x00, 0x00, 0x00, 0x00, 0x52, 0x56, 0x59, 0xff, 0x52, 0x56, 0x59, 0xff, 0x52,
  0x56, 0x59, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a,
  0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69,
  0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff,
  0x52, 0x56, 0x59, 0xff, 0x52, 0x56, 0x59, 0xff, 0x52, 0x56, 0x59, 0xff, 0x00,
  0x00, 0x00, 0x00, 0x52, 0x56, 0x59, 0xff, 0x52, 0x56, 0x59, 0xff, 0x00, 0x00,
  0x00, 0x00, 0x52, 0x56, 0x59, 0xff, 0x52, 0x56, 0x59, 0xff, 0x52, 0x56, 0x59,
  0xff, 0x52, 0x56, 0x59, 0xff, 0x52, 0x56, 0x59, 0xff, 0x52, 0x56, 0x59, 0xff,
  0x52, 0x56, 0x59, 0xff, 0x52, 0x56, 0x59, 0xff, 0x52, 0x56, 0x59, 0xff, 0x00,
  0x00, 0x00, 0x00, 0x52, 0x56, 0x59, 0xff, 0x52, 0x56, 0x59, 0xff, 0x00, 0x00,
  0x00, 0x00, 0x52, 0x56, 0x59, 0xff, 0x52, 0x56, 0x59, 0xff, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x52, 0x56, 0x59, 0xff, 0x52, 0x56, 0x59, 0xff,
];

const Global_Tank1 = [
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xb7, 0xad, 0x9b, 0xff, 0xb7, 0xad, 0x9b, 0xff, 0xb7, 0xad, 0x9b, 0xff, 0x87, 0x7e, 0x84, 0xff, 0xb7, 0xad, 0x9b, 0xff, 0xb7, 0xad, 0x9b, 0xff, 0xb7, 0xad, 0x9b, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xb7, 0xad, 0x9b, 0xff, 0xb7, 0xad, 0x9b, 0xff, 0xb7, 0xad, 0x9b, 0xff, 0xb7, 0xad, 0x9b, 0xff, 0x87, 0x7e, 0x84, 0xff, 0xb7, 0xad, 0x9b, 0xff, 0xb7, 0xad, 0x9b, 0xff, 0xb7, 0xad, 0x9b, 0xff, 0xb7, 0xad, 0x9b, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xb7, 0xad, 0x9b, 0xff, 0xb7, 0xad, 0x9b, 0xff, 0xb7, 0xad, 0x9b, 0xff, 0x87, 0x7e, 0x84, 0xff, 0x87, 0x7e, 0x84, 0xff, 0x87, 0x7e, 0x84, 0xff, 0xb7, 0xad, 0x9b, 0xff, 0xb7, 0xad, 0x9b, 0xff, 0xb7, 0xad, 0x9b, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x52, 0x56, 0x59, 0xff, 0x52, 0x56, 0x59, 0xff, 0xb7, 0xad, 0x9b, 0xff, 0xb7, 0xad, 0x9b, 0xff, 0xb7, 0xad, 0x9b, 0xff, 0x87, 0x7e, 0x84, 0xff, 0x52, 0x56, 0x59, 0xff, 0x87, 0x7e, 0x84, 0xff, 0xb7, 0xad, 0x9b, 0xff, 0xb7, 0xad, 0x9b, 0xff, 0xb7, 0xad, 0x9b, 0xff, 0x52, 0x56, 0x59, 0xff, 0x52, 0x56, 0x59, 0xff, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x52, 0x56, 0x59, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0xb7, 0xad, 0x9b, 0xff, 0xb7, 0xad, 0x9b, 0xff, 0xb7, 0xad, 0x9b, 0xff, 0xb7, 0xad, 0x9b, 0xff, 0x87, 0x7e, 0x84, 0xff, 0xb7, 0xad, 0x9b, 0xff, 0xb7, 0xad, 0x9b, 0xff, 0xb7, 0xad, 0x9b, 0xff, 0xb7, 0xad, 0x9b, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x52, 0x56, 0x59, 0xff, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x52, 0x56, 0x59, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0xb7, 0xad, 0x9b, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xb7, 0xad, 0x9b, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x52, 0x56, 0x59, 0xff, 
  0x00, 0x00, 0x00, 0x00, 0x52, 0x56, 0x59, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x52, 0x56, 0x59, 0xff, 
  0x00, 0x00, 0x00, 0x00, 0x52, 0x56, 0x59, 0xff, 0x52, 0x56, 0x59, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x52, 0x56, 0x59, 0xff, 0x52, 0x56, 0x59, 0xff, 
  0x00, 0x00, 0x00, 0x00, 0x52, 0x56, 0x59, 0xff, 0x52, 0x56, 0x59, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x52, 0x56, 0x59, 0xff, 0x52, 0x56, 0x59, 0xff, 
  0x00, 0x00, 0x00, 0x00, 0x52, 0x56, 0x59, 0xff, 0x52, 0x56, 0x59, 0xff, 0x52, 0x56, 0x59, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x52, 0x56, 0x59, 0xff, 0x52, 0x56, 0x59, 0xff, 0x52, 0x56, 0x59, 0xff, 
  0x00, 0x00, 0x00, 0x00, 0x52, 0x56, 0x59, 0xff, 0x52, 0x56, 0x59, 0xff, 0x00, 0x00, 0x00, 0x00, 0x52, 0x56, 0x59, 0xff, 0x52, 0x56, 0x59, 0xff, 0x52, 0x56, 0x59, 0xff, 0x52, 0x56, 0x59, 0xff, 0x52, 0x56, 0x59, 0xff, 0x52, 0x56, 0x59, 0xff, 0x52, 0x56, 0x59, 0xff, 0x52, 0x56, 0x59, 0xff, 0x52, 0x56, 0x59, 0xff, 0x00, 0x00, 0x00, 0x00, 0x52, 0x56, 0x59, 0xff, 0x52, 0x56, 0x59, 0xff, 
  0x00, 0x00, 0x00, 0x00, 0x52, 0x56, 0x59, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x52, 0x56, 0x59, 0xff, 0x00, 0x00, 0x00, 0x00, 

];

const Global_Tank2 = [
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xb7, 0xad, 0x9b, 0xff, 0xb7, 0xad, 0x9b, 0xff, 0xb7, 0xad, 0x9b, 0xff, 0x87, 0x7e, 0x84, 0xff, 0xb7, 0xad, 0x9b, 0xff, 0xb7, 0xad, 0x9b, 0xff, 0xb7, 0xad, 0x9b, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xb7, 0xad, 0x9b, 0xff, 0xb7, 0xad, 0x9b, 0xff, 0xb7, 0xad, 0x9b, 0xff, 0xb7, 0xad, 0x9b, 0xff, 0x87, 0x7e, 0x84, 0xff, 0xb7, 0xad, 0x9b, 0xff, 0xb7, 0xad, 0x9b, 0xff, 0xb7, 0xad, 0x9b, 0xff, 0xb7, 0xad, 0x9b, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xb7, 0xad, 0x9b, 0xff, 0xb7, 0xad, 0x9b, 0xff, 0xb7, 0xad, 0x9b, 0xff, 0x87, 0x7e, 0x84, 0xff, 0x87, 0x7e, 0x84, 0xff, 0x87, 0x7e, 0x84, 0xff, 0xb7, 0xad, 0x9b, 0xff, 0xb7, 0xad, 0x9b, 0xff, 0xb7, 0xad, 0x9b, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x52, 0x56, 0x59, 0xff, 0x52, 0x56, 0x59, 0xff, 0xb7, 0xad, 0x9b, 0xff, 0xb7, 0xad, 0x9b, 0xff, 0xb7, 0xad, 0x9b, 0xff, 0x87, 0x7e, 0x84, 0xff, 0x52, 0x56, 0x59, 0xff, 0x87, 0x7e, 0x84, 0xff, 0xb7, 0xad, 0x9b, 0xff, 0xb7, 0xad, 0x9b, 0xff, 0xb7, 0xad, 0x9b, 0xff, 0x52, 0x56, 0x59, 0xff, 0x52, 0x56, 0x59, 0xff, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x52, 0x56, 0x59, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0xb7, 0xad, 0x9b, 0xff, 0xb7, 0xad, 0x9b, 0xff, 0xb7, 0xad, 0x9b, 0xff, 0xb7, 0xad, 0x9b, 0xff, 0x87, 0x7e, 0x84, 0xff, 0xb7, 0xad, 0x9b, 0xff, 0xb7, 0xad, 0x9b, 0xff, 0xb7, 0xad, 0x9b, 0xff, 0xb7, 0xad, 0x9b, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x52, 0x56, 0x59, 0xff, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x52, 0x56, 0x59, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0xb7, 0xad, 0x9b, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xb7, 0xad, 0x9b, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x52, 0x56, 0x59, 0xff, 
  0x00, 0x00, 0x00, 0x00, 0x52, 0x56, 0x59, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x52, 0x56, 0x59, 0xff, 
  0x00, 0x00, 0x00, 0x00, 0x52, 0x56, 0x59, 0xff, 0x52, 0x56, 0x59, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x52, 0x56, 0x59, 0xff, 0x52, 0x56, 0x59, 0xff, 
  0x00, 0x00, 0x00, 0x00, 0x52, 0x56, 0x59, 0xff, 0x52, 0x56, 0x59, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x52, 0x56, 0x59, 0xff, 0x52, 0x56, 0x59, 0xff, 
  0x00, 0x00, 0x00, 0x00, 0x52, 0x56, 0x59, 0xff, 0x52, 0x56, 0x59, 0xff, 0x52, 0x56, 0x59, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x52, 0x56, 0x59, 0xff, 0x52, 0x56, 0x59, 0xff, 0x52, 0x56, 0x59, 0xff, 
  0x00, 0x00, 0x00, 0x00, 0x52, 0x56, 0x59, 0xff, 0x52, 0x56, 0x59, 0xff, 0x00, 0x00, 0x00, 0x00, 0x52, 0x56, 0x59, 0xff, 0x52, 0x56, 0x59, 0xff, 0x52, 0x56, 0x59, 0xff, 0x52, 0x56, 0x59, 0xff, 0x52, 0x56, 0x59, 0xff, 0x52, 0x56, 0x59, 0xff, 0x52, 0x56, 0x59, 0xff, 0x52, 0x56, 0x59, 0xff, 0x52, 0x56, 0x59, 0xff, 0x00, 0x00, 0x00, 0x00, 0x52, 0x56, 0x59, 0xff, 0x52, 0x56, 0x59, 0xff, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x52, 0x56, 0x59, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x52, 0x56, 0x59, 0xff, 

];


const Global_Floor = [
  0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a,
  0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a,
  0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69,
  0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff,
  0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a,
  0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a,
  0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69,
  0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff,
  0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a,
  0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a,
  0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69,
  0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff,
  0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a,
  0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a,
  0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69,
  0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff,
  0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a,
  0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a,
  0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69,
  0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff,
  0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a,
  0x6a, 0x69, 0xff, 0x52, 0x56, 0x59, 0xff, 0x52, 0x56, 0x59, 0xff, 0x52, 0x56,
  0x59, 0xff, 0x52, 0x56, 0x59, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69,
  0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff,
  0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a,
  0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a,
  0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69,
  0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff,
  0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a,
  0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a,
  0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69,
  0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x52, 0x56, 0x59, 0xff,
  0x52, 0x56, 0x59, 0xff, 0x52, 0x56, 0x59, 0xff, 0x52, 0x56, 0x59, 0xff, 0x52,
  0x56, 0x59, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a,
  0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69,
  0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff,
  0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a,
  0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a,
  0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69,
  0xff, 0x6a, 0x6a, 0x69, 0xff, 0x87, 0x7e, 0x84, 0xff, 0x87, 0x7e, 0x84, 0xff,
  0x87, 0x7e, 0x84, 0xff, 0x87, 0x7e, 0x84, 0xff, 0x87, 0x7e, 0x84, 0xff, 0x6a,
  0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a,
  0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69,
  0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff,
  0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a,
  0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a,
  0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69,
  0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff,
  0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a,
  0x6a, 0x69, 0xff, 0x87, 0x7e, 0x84, 0xff, 0x87, 0x7e, 0x84, 0xff, 0x87, 0x7e,
  0x84, 0xff, 0x87, 0x7e, 0x84, 0xff, 0x87, 0x7e, 0x84, 0xff, 0x87, 0x7e, 0x84,
  0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff,
  0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a,
  0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a,
  0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69,
  0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff,
  0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a,
  0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a,
  0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69,
  0xff, 0x87, 0x7e, 0x84, 0xff, 0x87, 0x7e, 0x84, 0xff, 0x87, 0x7e, 0x84, 0xff,
  0x87, 0x7e, 0x84, 0xff, 0x87, 0x7e, 0x84, 0xff, 0x87, 0x7e, 0x84, 0xff, 0x87,
  0x7e, 0x84, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a,
  0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69,
  0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff,
  0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a,
  0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a,
  0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69,
  0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff,
  0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x87,
  0x7e, 0x84, 0xff, 0x87, 0x7e, 0x84, 0xff, 0x87, 0x7e, 0x84, 0xff, 0x87, 0x7e,
  0x84, 0xff, 0x87, 0x7e, 0x84, 0xff, 0x87, 0x7e, 0x84, 0xff, 0x3c, 0x28, 0x45,
  0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff,
  0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a,
  0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a,
  0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69,
  0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff,
  0x6a, 0x6a, 0x69, 0xff, 0x52, 0x56, 0x59, 0xff, 0x52, 0x56, 0x59, 0xff, 0x52,
  0x56, 0x59, 0xff, 0x52, 0x56, 0x59, 0xff, 0x52, 0x56, 0x59, 0xff, 0x52, 0x56,
  0x59, 0xff, 0x52, 0x56, 0x59, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x3c, 0x28, 0x45,
  0xff, 0x3c, 0x28, 0x45, 0xff, 0x3c, 0x28, 0x45, 0xff, 0x3c, 0x28, 0x45, 0xff,
  0x3c, 0x28, 0x45, 0xff, 0x3c, 0x28, 0x45, 0xff, 0x3c, 0x28, 0x45, 0xff, 0x6a,
  0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a,
  0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69,
  0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff,
  0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a,
  0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a,
  0x69, 0xff, 0x52, 0x56, 0x59, 0xff, 0x52, 0x56, 0x59, 0xff, 0x52, 0x56, 0x59,
  0xff, 0x52, 0x56, 0x59, 0xff, 0x52, 0x56, 0x59, 0xff, 0x6a, 0x6a, 0x69, 0xff,
  0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a,
  0x6a, 0x69, 0xff, 0x3c, 0x28, 0x45, 0xff, 0x3c, 0x28, 0x45, 0xff, 0x6a, 0x6a,
  0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69,
  0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff,
  0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a,
  0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x87, 0x7e, 0x84, 0xff, 0x87, 0x7e,
  0x84, 0xff, 0x87, 0x7e, 0x84, 0xff, 0x87, 0x7e, 0x84, 0xff, 0x87, 0x7e, 0x84,
  0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff,
  0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a,
  0x6a, 0x69, 0xff, 0x52, 0x56, 0x59, 0xff, 0x52, 0x56, 0x59, 0xff, 0x52, 0x56,
  0x59, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69,
  0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff,
  0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a,
  0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a,
  0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x87, 0x7e, 0x84,
  0xff, 0x87, 0x7e, 0x84, 0xff, 0x87, 0x7e, 0x84, 0xff, 0x87, 0x7e, 0x84, 0xff,
  0x87, 0x7e, 0x84, 0xff, 0x87, 0x7e, 0x84, 0xff, 0x87, 0x7e, 0x84, 0xff, 0x87,
  0x7e, 0x84, 0xff, 0x87, 0x7e, 0x84, 0xff, 0x87, 0x7e, 0x84, 0xff, 0x6a, 0x6a,
  0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69,
  0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff,
  0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a,
  0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a,
  0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69,
  0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff,
  0x6a, 0x6a, 0x69, 0xff, 0x87, 0x7e, 0x84, 0xff, 0x87, 0x7e, 0x84, 0xff, 0x87,
  0x7e, 0x84, 0xff, 0x87, 0x7e, 0x84, 0xff, 0x87, 0x7e, 0x84, 0xff, 0x87, 0x7e,
  0x84, 0xff, 0x87, 0x7e, 0x84, 0xff, 0x87, 0x7e, 0x84, 0xff, 0x87, 0x7e, 0x84,
  0xff, 0x87, 0x7e, 0x84, 0xff, 0x87, 0x7e, 0x84, 0xff, 0x87, 0x7e, 0x84, 0xff,
  0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a,
  0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a,
  0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69,
  0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff,
  0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a,
  0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x87, 0x7e,
  0x84, 0xff, 0x87, 0x7e, 0x84, 0xff, 0x87, 0x7e, 0x84, 0xff, 0x87, 0x7e, 0x84,
  0xff, 0x87, 0x7e, 0x84, 0xff, 0x87, 0x7e, 0x84, 0xff, 0x87, 0x7e, 0x84, 0xff,
  0x87, 0x7e, 0x84, 0xff, 0x87, 0x7e, 0x84, 0xff, 0x87, 0x7e, 0x84, 0xff, 0x87,
  0x7e, 0x84, 0xff, 0x87, 0x7e, 0x84, 0xff, 0x87, 0x7e, 0x84, 0xff, 0x6a, 0x6a,
  0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69,
  0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff,
  0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a,
  0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a,
  0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69,
  0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x87, 0x7e, 0x84, 0xff,
  0x87, 0x7e, 0x84, 0xff, 0x87, 0x7e, 0x84, 0xff, 0x87, 0x7e, 0x84, 0xff, 0x87,
  0x7e, 0x84, 0xff, 0x87, 0x7e, 0x84, 0xff, 0x87, 0x7e, 0x84, 0xff, 0x87, 0x7e,
  0x84, 0xff, 0x87, 0x7e, 0x84, 0xff, 0x87, 0x7e, 0x84, 0xff, 0x87, 0x7e, 0x84,
  0xff, 0x87, 0x7e, 0x84, 0xff, 0x87, 0x7e, 0x84, 0xff, 0x6a, 0x6a, 0x69, 0xff,
  0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a,
  0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a,
  0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69,
  0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff,
  0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a,
  0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x3c, 0x28, 0x45, 0xff, 0x3c, 0x28,
  0x45, 0xff, 0x3c, 0x28, 0x45, 0xff, 0x87, 0x7e, 0x84, 0xff, 0x87, 0x7e, 0x84,
  0xff, 0x87, 0x7e, 0x84, 0xff, 0x87, 0x7e, 0x84, 0xff, 0x87, 0x7e, 0x84, 0xff,
  0x87, 0x7e, 0x84, 0xff, 0x87, 0x7e, 0x84, 0xff, 0x87, 0x7e, 0x84, 0xff, 0x87,
  0x7e, 0x84, 0xff, 0x87, 0x7e, 0x84, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a,
  0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69,
  0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff,
  0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a,
  0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a,
  0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69,
  0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff,
  0x3c, 0x28, 0x45, 0xff, 0x3c, 0x28, 0x45, 0xff, 0x3c, 0x28, 0x45, 0xff, 0x3c,
  0x28, 0x45, 0xff, 0x87, 0x7e, 0x84, 0xff, 0x87, 0x7e, 0x84, 0xff, 0x87, 0x7e,
  0x84, 0xff, 0x87, 0x7e, 0x84, 0xff, 0x87, 0x7e, 0x84, 0xff, 0x87, 0x7e, 0x84,
  0xff, 0x87, 0x7e, 0x84, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff,
  0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a,
  0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a,
  0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69,
  0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff,
  0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a,
  0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a,
  0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x3c, 0x28, 0x45,
  0xff, 0x3c, 0x28, 0x45, 0xff, 0x3c, 0x28, 0x45, 0xff, 0x3c, 0x28, 0x45, 0xff,
  0x3c, 0x28, 0x45, 0xff, 0x3c, 0x28, 0x45, 0xff, 0x3c, 0x28, 0x45, 0xff, 0x3c,
  0x28, 0x45, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a,
  0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69,
  0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x52, 0x56, 0x59, 0xff,
  0x52, 0x56, 0x59, 0xff, 0x52, 0x56, 0x59, 0xff, 0x52, 0x56, 0x59, 0xff, 0x52,
  0x56, 0x59, 0xff, 0x52, 0x56, 0x59, 0xff, 0x52, 0x56, 0x59, 0xff, 0x52, 0x56,
  0x59, 0xff, 0x52, 0x56, 0x59, 0xff, 0x52, 0x56, 0x59, 0xff, 0x52, 0x56, 0x59,
  0xff, 0x52, 0x56, 0x59, 0xff, 0x52, 0x56, 0x59, 0xff, 0x52, 0x56, 0x59, 0xff,
  0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a,
  0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a,
  0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69,
  0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff,
  0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a,
  0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a,
  0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69,
  0xff, 0x52, 0x56, 0x59, 0xff, 0x52, 0x56, 0x59, 0xff, 0x52, 0x56, 0x59, 0xff,
  0x52, 0x56, 0x59, 0xff, 0x52, 0x56, 0x59, 0xff, 0x52, 0x56, 0x59, 0xff, 0x52,
  0x56, 0x59, 0xff, 0x52, 0x56, 0x59, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a,
  0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69,
  0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff,
  0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a,
  0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a,
  0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69,
  0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff,
  0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a,
  0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a,
  0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69,
  0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff,
  0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a,
  0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a,
  0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69,
  0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff,
  0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a,
  0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a,
  0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x87, 0x7e, 0x84, 0xff, 0x87, 0x7e, 0x84,
  0xff, 0x87, 0x7e, 0x84, 0xff, 0x87, 0x7e, 0x84, 0xff, 0x87, 0x7e, 0x84, 0xff,
  0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a,
  0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a,
  0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69,
  0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff,
  0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a,
  0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a,
  0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69,
  0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x87, 0x7e, 0x84, 0xff,
  0x87, 0x7e, 0x84, 0xff, 0x87, 0x7e, 0x84, 0xff, 0x87, 0x7e, 0x84, 0xff, 0x87,
  0x7e, 0x84, 0xff, 0x87, 0x7e, 0x84, 0xff, 0x87, 0x7e, 0x84, 0xff, 0x87, 0x7e,
  0x84, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69,
  0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff,
  0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a,
  0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a,
  0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x87, 0x7e, 0x84, 0xff, 0x87, 0x7e, 0x84,
  0xff, 0x87, 0x7e, 0x84, 0xff, 0x87, 0x7e, 0x84, 0xff, 0x87, 0x7e, 0x84, 0xff,
  0x87, 0x7e, 0x84, 0xff, 0x87, 0x7e, 0x84, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a,
  0x6a, 0x69, 0xff, 0x87, 0x7e, 0x84, 0xff, 0x87, 0x7e, 0x84, 0xff, 0x87, 0x7e,
  0x84, 0xff, 0x87, 0x7e, 0x84, 0xff, 0x87, 0x7e, 0x84, 0xff, 0x87, 0x7e, 0x84,
  0xff, 0x87, 0x7e, 0x84, 0xff, 0x87, 0x7e, 0x84, 0xff, 0x87, 0x7e, 0x84, 0xff,
  0x87, 0x7e, 0x84, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a,
  0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a,
  0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69,
  0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff,
  0x87, 0x7e, 0x84, 0xff, 0x87, 0x7e, 0x84, 0xff, 0x87, 0x7e, 0x84, 0xff, 0x87,
  0x7e, 0x84, 0xff, 0x87, 0x7e, 0x84, 0xff, 0x87, 0x7e, 0x84, 0xff, 0x87, 0x7e,
  0x84, 0xff, 0x87, 0x7e, 0x84, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69,
  0xff, 0x87, 0x7e, 0x84, 0xff, 0x87, 0x7e, 0x84, 0xff, 0x87, 0x7e, 0x84, 0xff,
  0x87, 0x7e, 0x84, 0xff, 0x87, 0x7e, 0x84, 0xff, 0x87, 0x7e, 0x84, 0xff, 0x87,
  0x7e, 0x84, 0xff, 0x87, 0x7e, 0x84, 0xff, 0x87, 0x7e, 0x84, 0xff, 0x87, 0x7e,
  0x84, 0xff, 0x87, 0x7e, 0x84, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69,
  0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff,
  0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a,
  0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x87, 0x7e, 0x84, 0xff, 0x87, 0x7e,
  0x84, 0xff, 0x87, 0x7e, 0x84, 0xff, 0x87, 0x7e, 0x84, 0xff, 0x87, 0x7e, 0x84,
  0xff, 0x87, 0x7e, 0x84, 0xff, 0x87, 0x7e, 0x84, 0xff, 0x87, 0x7e, 0x84, 0xff,
  0x87, 0x7e, 0x84, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x87,
  0x7e, 0x84, 0xff, 0x87, 0x7e, 0x84, 0xff, 0x87, 0x7e, 0x84, 0xff, 0x87, 0x7e,
  0x84, 0xff, 0x87, 0x7e, 0x84, 0xff, 0x87, 0x7e, 0x84, 0xff, 0x87, 0x7e, 0x84,
  0xff, 0x87, 0x7e, 0x84, 0xff, 0x87, 0x7e, 0x84, 0xff, 0x87, 0x7e, 0x84, 0xff,
  0x87, 0x7e, 0x84, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a,
  0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a,
  0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69,
  0xff, 0x6a, 0x6a, 0x69, 0xff, 0x87, 0x7e, 0x84, 0xff, 0x87, 0x7e, 0x84, 0xff,
  0x87, 0x7e, 0x84, 0xff, 0x87, 0x7e, 0x84, 0xff, 0x87, 0x7e, 0x84, 0xff, 0x87,
  0x7e, 0x84, 0xff, 0x87, 0x7e, 0x84, 0xff, 0x87, 0x7e, 0x84, 0xff, 0x87, 0x7e,
  0x84, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x3c, 0x28, 0x45,
  0xff, 0x3c, 0x28, 0x45, 0xff, 0x3c, 0x28, 0x45, 0xff, 0x3c, 0x28, 0x45, 0xff,
  0x3c, 0x28, 0x45, 0xff, 0x87, 0x7e, 0x84, 0xff, 0x87, 0x7e, 0x84, 0xff, 0x87,
  0x7e, 0x84, 0xff, 0x87, 0x7e, 0x84, 0xff, 0x87, 0x7e, 0x84, 0xff, 0x3c, 0x28,
  0x45, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69,
  0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff,
  0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x3c,
  0x28, 0x45, 0xff, 0x87, 0x7e, 0x84, 0xff, 0x87, 0x7e, 0x84, 0xff, 0x87, 0x7e,
  0x84, 0xff, 0x87, 0x7e, 0x84, 0xff, 0x87, 0x7e, 0x84, 0xff, 0x87, 0x7e, 0x84,
  0xff, 0x87, 0x7e, 0x84, 0xff, 0x87, 0x7e, 0x84, 0xff, 0x87, 0x7e, 0x84, 0xff,
  0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a,
  0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x3c, 0x28,
  0x45, 0xff, 0x3c, 0x28, 0x45, 0xff, 0x3c, 0x28, 0x45, 0xff, 0x3c, 0x28, 0x45,
  0xff, 0x3c, 0x28, 0x45, 0xff, 0x3c, 0x28, 0x45, 0xff, 0x3c, 0x28, 0x45, 0xff,
  0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a,
  0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a,
  0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x3c, 0x28, 0x45,
  0xff, 0x3c, 0x28, 0x45, 0xff, 0x87, 0x7e, 0x84, 0xff, 0x87, 0x7e, 0x84, 0xff,
  0x3c, 0x28, 0x45, 0xff, 0x3c, 0x28, 0x45, 0xff, 0x3c, 0x28, 0x45, 0xff, 0x3c,
  0x28, 0x45, 0xff, 0x3c, 0x28, 0x45, 0xff, 0x3c, 0x28, 0x45, 0xff, 0x6a, 0x6a,
  0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69,
  0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff,
  0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a,
  0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a,
  0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69,
  0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff,
  0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x3c,
  0x28, 0x45, 0xff, 0x3c, 0x28, 0x45, 0xff, 0x3c, 0x28, 0x45, 0xff, 0x3c, 0x28,
  0x45, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69,
  0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff,
  0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a,
  0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a,
  0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69,
  0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff,
  0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a,
  0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a,
  0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69,
  0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff,
  0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a,
  0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a,
  0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69,
  0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff,
  0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a,
  0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a,
  0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69,
  0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff,
  0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a,
  0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a,
  0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69,
  0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff,
  0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a,
  0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a,
  0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69,
  0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff,
  0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x52,
  0x56, 0x59, 0xff, 0x52, 0x56, 0x59, 0xff, 0x52, 0x56, 0x59, 0xff, 0x52, 0x56,
  0x59, 0xff, 0x52, 0x56, 0x59, 0xff, 0x52, 0x56, 0x59, 0xff, 0x52, 0x56, 0x59,
  0xff, 0x52, 0x56, 0x59, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff,
  0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a,
  0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a,
  0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69,
  0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff,
  0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a,
  0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a,
  0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69,
  0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x52, 0x56, 0x59, 0xff,
  0x52, 0x56, 0x59, 0xff, 0x52, 0x56, 0x59, 0xff, 0x52, 0x56, 0x59, 0xff, 0x52,
  0x56, 0x59, 0xff, 0x52, 0x56, 0x59, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a,
  0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69,
  0xff,
];

const Global_Brick = [
  0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32,
  0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32,
  0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x66, 0xa0, 0xd9,
  0xff, 0x63, 0x57, 0xd9, 0xff, 0x63, 0x57, 0xd9, 0xff, 0x63, 0x57, 0xd9, 0xff,
  0x63, 0x57, 0xd9, 0xff, 0x63, 0x57, 0xd9, 0xff, 0x63, 0x57, 0xd9, 0xff, 0x63,
  0x57, 0xd9, 0xff, 0x63, 0x57, 0xd9, 0xff, 0x63, 0x57, 0xd9, 0xff, 0x63, 0x57,
  0xd9, 0xff, 0x63, 0x57, 0xd9, 0xff, 0x63, 0x57, 0xd9, 0xff, 0x63, 0x57, 0xd9,
  0xff, 0x66, 0xa0, 0xd9, 0xff, 0x66, 0xa0, 0xd9, 0xff, 0x32, 0x32, 0xac, 0xff,
  0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32,
  0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32,
  0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac,
  0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff,
  0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x66, 0xa0, 0xd9, 0xff, 0x63,
  0x57, 0xd9, 0xff, 0x63, 0x57, 0xd9, 0xff, 0x63, 0x57, 0xd9, 0xff, 0x63, 0x57,
  0xd9, 0xff, 0x63, 0x57, 0xd9, 0xff, 0x63, 0x57, 0xd9, 0xff, 0x63, 0x57, 0xd9,
  0xff, 0x63, 0x57, 0xd9, 0xff, 0x63, 0x57, 0xd9, 0xff, 0x63, 0x57, 0xd9, 0xff,
  0x63, 0x57, 0xd9, 0xff, 0x63, 0x57, 0xd9, 0xff, 0x63, 0x57, 0xd9, 0xff, 0x66,
  0xa0, 0xd9, 0xff, 0x66, 0xa0, 0xd9, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32,
  0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac,
  0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff,
  0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32,
  0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32,
  0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x66, 0xa0, 0xd9, 0xff, 0x63, 0x57, 0xd9,
  0xff, 0x63, 0x57, 0xd9, 0xff, 0x63, 0x57, 0xd9, 0xff, 0x63, 0x57, 0xd9, 0xff,
  0x63, 0x57, 0xd9, 0xff, 0x63, 0x57, 0xd9, 0xff, 0x63, 0x57, 0xd9, 0xff, 0x63,
  0x57, 0xd9, 0xff, 0x63, 0x57, 0xd9, 0xff, 0x63, 0x57, 0xd9, 0xff, 0x63, 0x57,
  0xd9, 0xff, 0x63, 0x57, 0xd9, 0xff, 0x63, 0x57, 0xd9, 0xff, 0x66, 0xa0, 0xd9,
  0xff, 0x66, 0xa0, 0xd9, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff,
  0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32,
  0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32,
  0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac,
  0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff,
  0x32, 0x32, 0xac, 0xff, 0x66, 0xa0, 0xd9, 0xff, 0x63, 0x57, 0xd9, 0xff, 0x63,
  0x57, 0xd9, 0xff, 0x63, 0x57, 0xd9, 0xff, 0x63, 0x57, 0xd9, 0xff, 0x63, 0x57,
  0xd9, 0xff, 0x63, 0x57, 0xd9, 0xff, 0x63, 0x57, 0xd9, 0xff, 0x63, 0x57, 0xd9,
  0xff, 0x63, 0x57, 0xd9, 0xff, 0x63, 0x57, 0xd9, 0xff, 0x63, 0x57, 0xd9, 0xff,
  0x63, 0x57, 0xd9, 0xff, 0x63, 0x57, 0xd9, 0xff, 0x66, 0xa0, 0xd9, 0xff, 0x66,
  0xa0, 0xd9, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32,
  0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac,
  0xff, 0x32, 0x32, 0xac, 0xff, 0x66, 0xa0, 0xd9, 0xff, 0x66, 0xa0, 0xd9, 0xff,
  0x66, 0xa0, 0xd9, 0xff, 0x66, 0xa0, 0xd9, 0xff, 0x66, 0xa0, 0xd9, 0xff, 0x66,
  0xa0, 0xd9, 0xff, 0x66, 0xa0, 0xd9, 0xff, 0x66, 0xa0, 0xd9, 0xff, 0x66, 0xa0,
  0xd9, 0xff, 0x66, 0xa0, 0xd9, 0xff, 0x66, 0xa0, 0xd9, 0xff, 0x66, 0xa0, 0xd9,
  0xff, 0x66, 0xa0, 0xd9, 0xff, 0x66, 0xa0, 0xd9, 0xff, 0x66, 0xa0, 0xd9, 0xff,
  0x66, 0xa0, 0xd9, 0xff, 0x66, 0xa0, 0xd9, 0xff, 0x66, 0xa0, 0xd9, 0xff, 0x66,
  0xa0, 0xd9, 0xff, 0x66, 0xa0, 0xd9, 0xff, 0x66, 0xa0, 0xd9, 0xff, 0x66, 0xa0,
  0xd9, 0xff, 0x66, 0xa0, 0xd9, 0xff, 0x66, 0xa0, 0xd9, 0xff, 0x66, 0xa0, 0xd9,
  0xff, 0x66, 0xa0, 0xd9, 0xff, 0x66, 0xa0, 0xd9, 0xff, 0x66, 0xa0, 0xd9, 0xff,
  0x66, 0xa0, 0xd9, 0xff, 0x66, 0xa0, 0xd9, 0xff, 0x66, 0xa0, 0xd9, 0xff, 0x66,
  0xa0, 0xd9, 0xff, 0x66, 0xa0, 0xd9, 0xff, 0x66, 0xa0, 0xd9, 0xff, 0x66, 0xa0,
  0xd9, 0xff, 0x66, 0xa0, 0xd9, 0xff, 0x66, 0xa0, 0xd9, 0xff, 0x66, 0xa0, 0xd9,
  0xff, 0x66, 0xa0, 0xd9, 0xff, 0x66, 0xa0, 0xd9, 0xff, 0x66, 0xa0, 0xd9, 0xff,
  0x66, 0xa0, 0xd9, 0xff, 0x66, 0xa0, 0xd9, 0xff, 0x66, 0xa0, 0xd9, 0xff, 0x66,
  0xa0, 0xd9, 0xff, 0x66, 0xa0, 0xd9, 0xff, 0x66, 0xa0, 0xd9, 0xff, 0x66, 0xa0,
  0xd9, 0xff, 0x66, 0xa0, 0xd9, 0xff, 0x66, 0xa0, 0xd9, 0xff, 0x66, 0xa0, 0xd9,
  0xff, 0x66, 0xa0, 0xd9, 0xff, 0x66, 0xa0, 0xd9, 0xff, 0x66, 0xa0, 0xd9, 0xff,
  0x66, 0xa0, 0xd9, 0xff, 0x66, 0xa0, 0xd9, 0xff, 0x66, 0xa0, 0xd9, 0xff, 0x66,
  0xa0, 0xd9, 0xff, 0x66, 0xa0, 0xd9, 0xff, 0x66, 0xa0, 0xd9, 0xff, 0x66, 0xa0,
  0xd9, 0xff, 0x66, 0xa0, 0xd9, 0xff, 0x66, 0xa0, 0xd9, 0xff, 0x66, 0xa0, 0xd9,
  0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff,
  0x32, 0x32, 0xac, 0xff, 0x66, 0xa0, 0xd9, 0xff, 0x63, 0x57, 0xd9, 0xff, 0x63,
  0x57, 0xd9, 0xff, 0x63, 0x57, 0xd9, 0xff, 0x63, 0x57, 0xd9, 0xff, 0x63, 0x57,
  0xd9, 0xff, 0x63, 0x57, 0xd9, 0xff, 0x63, 0x57, 0xd9, 0xff, 0x63, 0x57, 0xd9,
  0xff, 0x63, 0x57, 0xd9, 0xff, 0x63, 0x57, 0xd9, 0xff, 0x63, 0x57, 0xd9, 0xff,
  0x63, 0x57, 0xd9, 0xff, 0x63, 0x57, 0xd9, 0xff, 0x66, 0xa0, 0xd9, 0xff, 0x66,
  0xa0, 0xd9, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32,
  0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac,
  0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff,
  0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32,
  0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32,
  0xac, 0xff, 0x66, 0xa0, 0xd9, 0xff, 0x63, 0x57, 0xd9, 0xff, 0x63, 0x57, 0xd9,
  0xff, 0x63, 0x57, 0xd9, 0xff, 0x63, 0x57, 0xd9, 0xff, 0x63, 0x57, 0xd9, 0xff,
  0x63, 0x57, 0xd9, 0xff, 0x63, 0x57, 0xd9, 0xff, 0x63, 0x57, 0xd9, 0xff, 0x63,
  0x57, 0xd9, 0xff, 0x63, 0x57, 0xd9, 0xff, 0x63, 0x57, 0xd9, 0xff, 0x63, 0x57,
  0xd9, 0xff, 0x63, 0x57, 0xd9, 0xff, 0x66, 0xa0, 0xd9, 0xff, 0x66, 0xa0, 0xd9,
  0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff,
  0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32,
  0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32,
  0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac,
  0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff,
  0x66, 0xa0, 0xd9, 0xff, 0x63, 0x57, 0xd9, 0xff, 0x63, 0x57, 0xd9, 0xff, 0x63,
  0x57, 0xd9, 0xff, 0x63, 0x57, 0xd9, 0xff, 0x63, 0x57, 0xd9, 0xff, 0x63, 0x57,
  0xd9, 0xff, 0x63, 0x57, 0xd9, 0xff, 0x63, 0x57, 0xd9, 0xff, 0x63, 0x57, 0xd9,
  0xff, 0x63, 0x57, 0xd9, 0xff, 0x63, 0x57, 0xd9, 0xff, 0x63, 0x57, 0xd9, 0xff,
  0x63, 0x57, 0xd9, 0xff, 0x66, 0xa0, 0xd9, 0xff, 0x66, 0xa0, 0xd9, 0xff, 0x32,
  0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32,
  0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac,
  0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff,
  0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32,
  0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x66, 0xa0,
  0xd9, 0xff, 0x63, 0x57, 0xd9, 0xff, 0x63, 0x57, 0xd9, 0xff, 0x63, 0x57, 0xd9,
  0xff, 0x63, 0x57, 0xd9, 0xff, 0x63, 0x57, 0xd9, 0xff, 0x63, 0x57, 0xd9, 0xff,
  0x63, 0x57, 0xd9, 0xff, 0x63, 0x57, 0xd9, 0xff, 0x63, 0x57, 0xd9, 0xff, 0x63,
  0x57, 0xd9, 0xff, 0x63, 0x57, 0xd9, 0xff, 0x63, 0x57, 0xd9, 0xff, 0x63, 0x57,
  0xd9, 0xff, 0x66, 0xa0, 0xd9, 0xff, 0x66, 0xa0, 0xd9, 0xff, 0x32, 0x32, 0xac,
  0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff,
  0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32,
  0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32,
  0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x66, 0xa0, 0xd9, 0xff, 0x66, 0xa0, 0xd9,
  0xff, 0x66, 0xa0, 0xd9, 0xff, 0x66, 0xa0, 0xd9, 0xff, 0x66, 0xa0, 0xd9, 0xff,
  0x66, 0xa0, 0xd9, 0xff, 0x66, 0xa0, 0xd9, 0xff, 0x66, 0xa0, 0xd9, 0xff, 0x66,
  0xa0, 0xd9, 0xff, 0x66, 0xa0, 0xd9, 0xff, 0x66, 0xa0, 0xd9, 0xff, 0x66, 0xa0,
  0xd9, 0xff, 0x66, 0xa0, 0xd9, 0xff, 0x66, 0xa0, 0xd9, 0xff, 0x66, 0xa0, 0xd9,
  0xff, 0x66, 0xa0, 0xd9, 0xff, 0x66, 0xa0, 0xd9, 0xff, 0x66, 0xa0, 0xd9, 0xff,
  0x66, 0xa0, 0xd9, 0xff, 0x66, 0xa0, 0xd9, 0xff, 0x66, 0xa0, 0xd9, 0xff, 0x66,
  0xa0, 0xd9, 0xff, 0x66, 0xa0, 0xd9, 0xff, 0x66, 0xa0, 0xd9, 0xff, 0x66, 0xa0,
  0xd9, 0xff, 0x66, 0xa0, 0xd9, 0xff, 0x66, 0xa0, 0xd9, 0xff, 0x66, 0xa0, 0xd9,
  0xff, 0x66, 0xa0, 0xd9, 0xff, 0x66, 0xa0, 0xd9, 0xff, 0x66, 0xa0, 0xd9, 0xff,
  0x66, 0xa0, 0xd9, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32,
  0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32,
  0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac,
  0xff, 0x32, 0x32, 0xac, 0xff, 0x66, 0xa0, 0xd9, 0xff, 0x63, 0x57, 0xd9, 0xff,
  0x63, 0x57, 0xd9, 0xff, 0x63, 0x57, 0xd9, 0xff, 0x63, 0x57, 0xd9, 0xff, 0x63,
  0x57, 0xd9, 0xff, 0x63, 0x57, 0xd9, 0xff, 0x63, 0x57, 0xd9, 0xff, 0x63, 0x57,
  0xd9, 0xff, 0x63, 0x57, 0xd9, 0xff, 0x63, 0x57, 0xd9, 0xff, 0x63, 0x57, 0xd9,
  0xff, 0x63, 0x57, 0xd9, 0xff, 0x63, 0x57, 0xd9, 0xff, 0x66, 0xa0, 0xd9, 0xff,
  0x66, 0xa0, 0xd9, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32,
  0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32,
  0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac,
  0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff,
  0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32,
  0x32, 0xac, 0xff, 0x66, 0xa0, 0xd9, 0xff, 0x63, 0x57, 0xd9, 0xff, 0x63, 0x57,
  0xd9, 0xff, 0x63, 0x57, 0xd9, 0xff, 0x63, 0x57, 0xd9, 0xff, 0x63, 0x57, 0xd9,
  0xff, 0x63, 0x57, 0xd9, 0xff, 0x63, 0x57, 0xd9, 0xff, 0x63, 0x57, 0xd9, 0xff,
  0x63, 0x57, 0xd9, 0xff, 0x63, 0x57, 0xd9, 0xff, 0x63, 0x57, 0xd9, 0xff, 0x63,
  0x57, 0xd9, 0xff, 0x63, 0x57, 0xd9, 0xff, 0x66, 0xa0, 0xd9, 0xff, 0x66, 0xa0,
  0xd9, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac,
  0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff,
  0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32,
  0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32,
  0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac,
  0xff, 0x66, 0xa0, 0xd9, 0xff, 0x63, 0x57, 0xd9, 0xff, 0x63, 0x57, 0xd9, 0xff,
  0x63, 0x57, 0xd9, 0xff, 0x63, 0x57, 0xd9, 0xff, 0x63, 0x57, 0xd9, 0xff, 0x63,
  0x57, 0xd9, 0xff, 0x63, 0x57, 0xd9, 0xff, 0x63, 0x57, 0xd9, 0xff, 0x63, 0x57,
  0xd9, 0xff, 0x63, 0x57, 0xd9, 0xff, 0x63, 0x57, 0xd9, 0xff, 0x63, 0x57, 0xd9,
  0xff, 0x63, 0x57, 0xd9, 0xff, 0x66, 0xa0, 0xd9, 0xff, 0x66, 0xa0, 0xd9, 0xff,
  0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32,
  0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32,
  0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac,
  0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff,
  0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x66,
  0xa0, 0xd9, 0xff, 0x63, 0x57, 0xd9, 0xff, 0x63, 0x57, 0xd9, 0xff, 0x63, 0x57,
  0xd9, 0xff, 0x63, 0x57, 0xd9, 0xff, 0x63, 0x57, 0xd9, 0xff, 0x63, 0x57, 0xd9,
  0xff, 0x63, 0x57, 0xd9, 0xff, 0x63, 0x57, 0xd9, 0xff, 0x63, 0x57, 0xd9, 0xff,
  0x63, 0x57, 0xd9, 0xff, 0x63, 0x57, 0xd9, 0xff, 0x63, 0x57, 0xd9, 0xff, 0x63,
  0x57, 0xd9, 0xff, 0x66, 0xa0, 0xd9, 0xff, 0x66, 0xa0, 0xd9, 0xff, 0x32, 0x32,
  0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac,
  0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x66, 0xa0, 0xd9, 0xff,
  0x66, 0xa0, 0xd9, 0xff, 0x66, 0xa0, 0xd9, 0xff, 0x66, 0xa0, 0xd9, 0xff, 0x66,
  0xa0, 0xd9, 0xff, 0x66, 0xa0, 0xd9, 0xff, 0x66, 0xa0, 0xd9, 0xff, 0x66, 0xa0,
  0xd9, 0xff, 0x66, 0xa0, 0xd9, 0xff, 0x66, 0xa0, 0xd9, 0xff, 0x66, 0xa0, 0xd9,
  0xff, 0x66, 0xa0, 0xd9, 0xff, 0x66, 0xa0, 0xd9, 0xff, 0x66, 0xa0, 0xd9, 0xff,
  0x66, 0xa0, 0xd9, 0xff, 0x66, 0xa0, 0xd9, 0xff, 0x66, 0xa0, 0xd9, 0xff, 0x66,
  0xa0, 0xd9, 0xff, 0x66, 0xa0, 0xd9, 0xff, 0x66, 0xa0, 0xd9, 0xff, 0x66, 0xa0,
  0xd9, 0xff, 0x66, 0xa0, 0xd9, 0xff, 0x66, 0xa0, 0xd9, 0xff, 0x66, 0xa0, 0xd9,
  0xff, 0x66, 0xa0, 0xd9, 0xff, 0x66, 0xa0, 0xd9, 0xff, 0x66, 0xa0, 0xd9, 0xff,
  0x66, 0xa0, 0xd9, 0xff, 0x66, 0xa0, 0xd9, 0xff, 0x66, 0xa0, 0xd9, 0xff, 0x66,
  0xa0, 0xd9, 0xff, 0x66, 0xa0, 0xd9, 0xff, 0x63, 0x57, 0xd9, 0xff, 0x63, 0x57,
  0xd9, 0xff, 0x63, 0x57, 0xd9, 0xff, 0x63, 0x57, 0xd9, 0xff, 0x63, 0x57, 0xd9,
  0xff, 0x63, 0x57, 0xd9, 0xff, 0x63, 0x57, 0xd9, 0xff, 0x63, 0x57, 0xd9, 0xff,
  0x63, 0x57, 0xd9, 0xff, 0x63, 0x57, 0xd9, 0xff, 0x66, 0xa0, 0xd9, 0xff, 0x66,
  0xa0, 0xd9, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32,
  0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac,
  0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff,
  0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32,
  0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32,
  0xac, 0xff, 0x66, 0xa0, 0xd9, 0xff, 0x63, 0x57, 0xd9, 0xff, 0x63, 0x57, 0xd9,
  0xff, 0x63, 0x57, 0xd9, 0xff, 0x63, 0x57, 0xd9, 0xff, 0x63, 0x57, 0xd9, 0xff,
  0x63, 0x57, 0xd9, 0xff, 0x63, 0x57, 0xd9, 0xff, 0x63, 0x57, 0xd9, 0xff, 0x63,
  0x57, 0xd9, 0xff, 0x63, 0x57, 0xd9, 0xff, 0x63, 0x57, 0xd9, 0xff, 0x63, 0x57,
  0xd9, 0xff, 0x63, 0x57, 0xd9, 0xff, 0x66, 0xa0, 0xd9, 0xff, 0x66, 0xa0, 0xd9,
  0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff,
  0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32,
  0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32,
  0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac,
  0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff,
  0x66, 0xa0, 0xd9, 0xff, 0x63, 0x57, 0xd9, 0xff, 0x63, 0x57, 0xd9, 0xff, 0x63,
  0x57, 0xd9, 0xff, 0x63, 0x57, 0xd9, 0xff, 0x63, 0x57, 0xd9, 0xff, 0x63, 0x57,
  0xd9, 0xff, 0x63, 0x57, 0xd9, 0xff, 0x63, 0x57, 0xd9, 0xff, 0x63, 0x57, 0xd9,
  0xff, 0x63, 0x57, 0xd9, 0xff, 0x63, 0x57, 0xd9, 0xff, 0x63, 0x57, 0xd9, 0xff,
  0x63, 0x57, 0xd9, 0xff, 0x66, 0xa0, 0xd9, 0xff, 0x66, 0xa0, 0xd9, 0xff, 0x32,
  0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32,
  0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac,
  0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff,
  0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32,
  0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x66, 0xa0,
  0xd9, 0xff, 0x63, 0x57, 0xd9, 0xff, 0x63, 0x57, 0xd9, 0xff, 0x63, 0x57, 0xd9,
  0xff, 0x63, 0x57, 0xd9, 0xff, 0x63, 0x57, 0xd9, 0xff, 0x63, 0x57, 0xd9, 0xff,
  0x63, 0x57, 0xd9, 0xff, 0x63, 0x57, 0xd9, 0xff, 0x63, 0x57, 0xd9, 0xff, 0x63,
  0x57, 0xd9, 0xff, 0x63, 0x57, 0xd9, 0xff, 0x63, 0x57, 0xd9, 0xff, 0x63, 0x57,
  0xd9, 0xff, 0x66, 0xa0, 0xd9, 0xff, 0x66, 0xa0, 0xd9, 0xff, 0x32, 0x32, 0xac,
  0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff,
  0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32,
  0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32,
  0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac,
  0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x66, 0xa0, 0xd9, 0xff,
  0x63, 0x57, 0xd9, 0xff, 0x63, 0x57, 0xd9, 0xff, 0x63, 0x57, 0xd9, 0xff, 0x66,
  0xa0, 0xd9, 0xff, 0x66, 0xa0, 0xd9, 0xff, 0x66, 0xa0, 0xd9, 0xff, 0x66, 0xa0,
  0xd9, 0xff, 0x66, 0xa0, 0xd9, 0xff, 0x66, 0xa0, 0xd9, 0xff, 0x66, 0xa0, 0xd9,
  0xff, 0x66, 0xa0, 0xd9, 0xff, 0x66, 0xa0, 0xd9, 0xff, 0x66, 0xa0, 0xd9, 0xff,
  0x66, 0xa0, 0xd9, 0xff, 0x66, 0xa0, 0xd9, 0xff, 0x66, 0xa0, 0xd9, 0xff, 0x66,
  0xa0, 0xd9, 0xff, 0x66, 0xa0, 0xd9, 0xff, 0x66, 0xa0, 0xd9, 0xff, 0x66, 0xa0,
  0xd9, 0xff, 0x66, 0xa0, 0xd9, 0xff, 0x66, 0xa0, 0xd9, 0xff, 0x66, 0xa0, 0xd9,
  0xff, 0x66, 0xa0, 0xd9, 0xff, 0x66, 0xa0, 0xd9, 0xff, 0x66, 0xa0, 0xd9, 0xff,
  0x66, 0xa0, 0xd9, 0xff, 0x66, 0xa0, 0xd9, 0xff, 0x66, 0xa0, 0xd9, 0xff, 0x66,
  0xa0, 0xd9, 0xff, 0x66, 0xa0, 0xd9, 0xff, 0x66, 0xa0, 0xd9, 0xff, 0x66, 0xa0,
  0xd9, 0xff, 0x66, 0xa0, 0xd9, 0xff, 0x66, 0xa0, 0xd9, 0xff, 0x66, 0xa0, 0xd9,
  0xff, 0x66, 0xa0, 0xd9, 0xff, 0x66, 0xa0, 0xd9, 0xff, 0x66, 0xa0, 0xd9, 0xff,
  0x66, 0xa0, 0xd9, 0xff, 0x66, 0xa0, 0xd9, 0xff, 0x66, 0xa0, 0xd9, 0xff, 0x66,
  0xa0, 0xd9, 0xff, 0x66, 0xa0, 0xd9, 0xff, 0x66, 0xa0, 0xd9, 0xff, 0x66, 0xa0,
  0xd9, 0xff, 0x66, 0xa0, 0xd9, 0xff, 0x66, 0xa0, 0xd9, 0xff, 0x66, 0xa0, 0xd9,
  0xff, 0x66, 0xa0, 0xd9, 0xff, 0x66, 0xa0, 0xd9, 0xff, 0x66, 0xa0, 0xd9, 0xff,
  0x66, 0xa0, 0xd9, 0xff, 0x66, 0xa0, 0xd9, 0xff, 0x66, 0xa0, 0xd9, 0xff, 0x66,
  0xa0, 0xd9, 0xff, 0x66, 0xa0, 0xd9, 0xff, 0x66, 0xa0, 0xd9, 0xff, 0x66, 0xa0,
  0xd9, 0xff, 0x66, 0xa0, 0xd9, 0xff, 0x66, 0xa0, 0xd9, 0xff, 0x66, 0xa0, 0xd9,
  0xff, 0x66, 0xa0, 0xd9, 0xff, 0x66, 0xa0, 0xd9, 0xff, 0x66, 0xa0, 0xd9, 0xff,
  0x66, 0xa0, 0xd9, 0xff, 0x66, 0xa0, 0xd9, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32,
  0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32,
  0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac,
  0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x66, 0xa0, 0xd9, 0xff,
  0x63, 0x57, 0xd9, 0xff, 0x63, 0x57, 0xd9, 0xff, 0x63, 0x57, 0xd9, 0xff, 0x63,
  0x57, 0xd9, 0xff, 0x63, 0x57, 0xd9, 0xff, 0x63, 0x57, 0xd9, 0xff, 0x63, 0x57,
  0xd9, 0xff, 0x63, 0x57, 0xd9, 0xff, 0x63, 0x57, 0xd9, 0xff, 0x63, 0x57, 0xd9,
  0xff, 0x63, 0x57, 0xd9, 0xff, 0x63, 0x57, 0xd9, 0xff, 0x63, 0x57, 0xd9, 0xff,
  0x63, 0x57, 0xd9, 0xff, 0x63, 0x57, 0xd9, 0xff, 0x66, 0xa0, 0xd9, 0xff, 0x66,
  0xa0, 0xd9, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32,
  0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac,
  0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff,
  0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32,
  0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x66, 0xa0, 0xd9, 0xff, 0x63, 0x57,
  0xd9, 0xff, 0x63, 0x57, 0xd9, 0xff, 0x63, 0x57, 0xd9, 0xff, 0x63, 0x57, 0xd9,
  0xff, 0x63, 0x57, 0xd9, 0xff, 0x63, 0x57, 0xd9, 0xff, 0x63, 0x57, 0xd9, 0xff,
  0x63, 0x57, 0xd9, 0xff, 0x63, 0x57, 0xd9, 0xff, 0x63, 0x57, 0xd9, 0xff, 0x63,
  0x57, 0xd9, 0xff, 0x63, 0x57, 0xd9, 0xff, 0x63, 0x57, 0xd9, 0xff, 0x63, 0x57,
  0xd9, 0xff, 0x63, 0x57, 0xd9, 0xff, 0x66, 0xa0, 0xd9, 0xff, 0x66, 0xa0, 0xd9,
  0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff,
  0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32,
  0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32,
  0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac,
  0xff, 0x32, 0x32, 0xac, 0xff, 0x66, 0xa0, 0xd9, 0xff, 0x63, 0x57, 0xd9, 0xff,
  0x63, 0x57, 0xd9, 0xff, 0x63, 0x57, 0xd9, 0xff, 0x63, 0x57, 0xd9, 0xff, 0x63,
  0x57, 0xd9, 0xff, 0x63, 0x57, 0xd9, 0xff, 0x63, 0x57, 0xd9, 0xff, 0x63, 0x57,
  0xd9, 0xff, 0x63, 0x57, 0xd9, 0xff, 0x63, 0x57, 0xd9, 0xff, 0x63, 0x57, 0xd9,
  0xff, 0x63, 0x57, 0xd9, 0xff, 0x63, 0x57, 0xd9, 0xff, 0x63, 0x57, 0xd9, 0xff,
  0x63, 0x57, 0xd9, 0xff, 0x66, 0xa0, 0xd9, 0xff, 0x66, 0xa0, 0xd9, 0xff, 0x32,
  0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32,
  0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac,
  0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff,
  0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32,
  0x32, 0xac, 0xff, 0x66, 0xa0, 0xd9, 0xff, 0x63, 0x57, 0xd9, 0xff, 0x63, 0x57,
  0xd9, 0xff, 0x63, 0x57, 0xd9, 0xff, 0x63, 0x57, 0xd9, 0xff, 0x63, 0x57, 0xd9,
  0xff, 0x63, 0x57, 0xd9, 0xff, 0x63, 0x57, 0xd9, 0xff, 0x63, 0x57, 0xd9, 0xff,
  0x63, 0x57, 0xd9, 0xff, 0x63, 0x57, 0xd9, 0xff, 0x63, 0x57, 0xd9, 0xff, 0x63,
  0x57, 0xd9, 0xff, 0x63, 0x57, 0xd9, 0xff, 0x63, 0x57, 0xd9, 0xff, 0x63, 0x57,
  0xd9, 0xff, 0x66, 0xa0, 0xd9, 0xff, 0x66, 0xa0, 0xd9, 0xff, 0x32, 0x32, 0xac,
  0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff,
  0x66, 0xa0, 0xd9, 0xff, 0x66, 0xa0, 0xd9, 0xff, 0x66, 0xa0, 0xd9, 0xff, 0x66,
  0xa0, 0xd9, 0xff, 0x66, 0xa0, 0xd9, 0xff, 0x66, 0xa0, 0xd9, 0xff, 0x66, 0xa0,
  0xd9, 0xff, 0x66, 0xa0, 0xd9, 0xff, 0x66, 0xa0, 0xd9, 0xff, 0x66, 0xa0, 0xd9,
  0xff, 0x66, 0xa0, 0xd9, 0xff, 0x66, 0xa0, 0xd9, 0xff, 0x66, 0xa0, 0xd9, 0xff,
  0x66, 0xa0, 0xd9, 0xff, 0x66, 0xa0, 0xd9, 0xff, 0x66, 0xa0, 0xd9, 0xff, 0x66,
  0xa0, 0xd9, 0xff, 0x66, 0xa0, 0xd9, 0xff, 0x66, 0xa0, 0xd9, 0xff, 0x66, 0xa0,
  0xd9, 0xff, 0x66, 0xa0, 0xd9, 0xff, 0x66, 0xa0, 0xd9, 0xff, 0x66, 0xa0, 0xd9,
  0xff, 0x66, 0xa0, 0xd9, 0xff, 0x66, 0xa0, 0xd9, 0xff, 0x66, 0xa0, 0xd9, 0xff,
  0x66, 0xa0, 0xd9, 0xff, 0x66, 0xa0, 0xd9, 0xff, 0x66, 0xa0, 0xd9, 0xff, 0x66,
  0xa0, 0xd9, 0xff, 0x66, 0xa0, 0xd9, 0xff, 0x66, 0xa0, 0xd9, 0xff, 0x66, 0xa0,
  0xd9, 0xff, 0x66, 0xa0, 0xd9, 0xff, 0x66, 0xa0, 0xd9, 0xff, 0x66, 0xa0, 0xd9,
  0xff, 0x66, 0xa0, 0xd9, 0xff, 0x66, 0xa0, 0xd9, 0xff, 0x66, 0xa0, 0xd9, 0xff,
  0x66, 0xa0, 0xd9, 0xff, 0x66, 0xa0, 0xd9, 0xff, 0x66, 0xa0, 0xd9, 0xff, 0x66,
  0xa0, 0xd9, 0xff, 0x66, 0xa0, 0xd9, 0xff, 0x66, 0xa0, 0xd9, 0xff, 0x66, 0xa0,
  0xd9, 0xff, 0x66, 0xa0, 0xd9, 0xff, 0x66, 0xa0, 0xd9, 0xff, 0x66, 0xa0, 0xd9,
  0xff, 0x66, 0xa0, 0xd9, 0xff, 0x66, 0xa0, 0xd9, 0xff, 0x66, 0xa0, 0xd9, 0xff,
  0x66, 0xa0, 0xd9, 0xff, 0x66, 0xa0, 0xd9, 0xff, 0x66, 0xa0, 0xd9, 0xff, 0x66,
  0xa0, 0xd9, 0xff, 0x66, 0xa0, 0xd9, 0xff, 0x66, 0xa0, 0xd9, 0xff, 0x66, 0xa0,
  0xd9, 0xff, 0x66, 0xa0, 0xd9, 0xff, 0x66, 0xa0, 0xd9, 0xff, 0x66, 0xa0, 0xd9,
  0xff, 0x66, 0xa0, 0xd9, 0xff, 0x66, 0xa0, 0xd9, 0xff, 0x32, 0x32, 0xac, 0xff,
  0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32,
  0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32,
  0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x66, 0xa0, 0xd9,
  0xff, 0x63, 0x57, 0xd9, 0xff, 0x63, 0x57, 0xd9, 0xff, 0x63, 0x57, 0xd9, 0xff,
  0x63, 0x57, 0xd9, 0xff, 0x63, 0x57, 0xd9, 0xff, 0x63, 0x57, 0xd9, 0xff, 0x63,
  0x57, 0xd9, 0xff, 0x63, 0x57, 0xd9, 0xff, 0x63, 0x57, 0xd9, 0xff, 0x63, 0x57,
  0xd9, 0xff, 0x63, 0x57, 0xd9, 0xff, 0x63, 0x57, 0xd9, 0xff, 0x63, 0x57, 0xd9,
  0xff, 0x66, 0xa0, 0xd9, 0xff, 0x66, 0xa0, 0xd9, 0xff, 0x32, 0x32, 0xac, 0xff,
  0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32,
  0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32,
  0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac,
  0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff,
  0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x66, 0xa0, 0xd9, 0xff, 0x63,
  0x57, 0xd9, 0xff, 0x63, 0x57, 0xd9, 0xff, 0x63, 0x57, 0xd9, 0xff, 0x63, 0x57,
  0xd9, 0xff, 0x63, 0x57, 0xd9, 0xff, 0x63, 0x57, 0xd9, 0xff, 0x63, 0x57, 0xd9,
  0xff, 0x63, 0x57, 0xd9, 0xff, 0x63, 0x57, 0xd9, 0xff, 0x63, 0x57, 0xd9, 0xff,
  0x63, 0x57, 0xd9, 0xff, 0x63, 0x57, 0xd9, 0xff, 0x63, 0x57, 0xd9, 0xff, 0x66,
  0xa0, 0xd9, 0xff, 0x66, 0xa0, 0xd9, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32,
  0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac,
  0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff,
  0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32,
  0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32,
  0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x66, 0xa0, 0xd9, 0xff, 0x63, 0x57, 0xd9,
  0xff, 0x63, 0x57, 0xd9, 0xff, 0x63, 0x57, 0xd9, 0xff, 0x63, 0x57, 0xd9, 0xff,
  0x63, 0x57, 0xd9, 0xff, 0x63, 0x57, 0xd9, 0xff, 0x63, 0x57, 0xd9, 0xff, 0x63,
  0x57, 0xd9, 0xff, 0x63, 0x57, 0xd9, 0xff, 0x63, 0x57, 0xd9, 0xff, 0x63, 0x57,
  0xd9, 0xff, 0x63, 0x57, 0xd9, 0xff, 0x63, 0x57, 0xd9, 0xff, 0x66, 0xa0, 0xd9,
  0xff, 0x66, 0xa0, 0xd9, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff,
  0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32,
  0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32,
  0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac,
  0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff,
  0x32, 0x32, 0xac, 0xff, 0x66, 0xa0, 0xd9, 0xff, 0x63, 0x57, 0xd9, 0xff, 0x63,
  0x57, 0xd9, 0xff, 0x63, 0x57, 0xd9, 0xff, 0x63, 0x57, 0xd9, 0xff, 0x63, 0x57,
  0xd9, 0xff, 0x63, 0x57, 0xd9, 0xff, 0x63, 0x57, 0xd9, 0xff, 0x63, 0x57, 0xd9,
  0xff, 0x63, 0x57, 0xd9, 0xff, 0x63, 0x57, 0xd9, 0xff, 0x63, 0x57, 0xd9, 0xff,
  0x63, 0x57, 0xd9, 0xff, 0x63, 0x57, 0xd9, 0xff, 0x66, 0xa0, 0xd9, 0xff, 0x66,
  0xa0, 0xd9, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32,
  0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac,
  0xff,
];

const Global_Alien = [ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xb7, 0xad, 0x9b, 0xff, 0xb7, 0xad, 0x9b, 0xff, 0xb7, 0xad, 0x9b, 0xff, 0xb7, 0xad, 0x9b, 0xff, 0xb7, 0xad, 0x9b, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xb7, 0xad, 0x9b, 0xff, 0xb7, 0xad, 0x9b, 0xff, 0xb7, 0xad, 0x9b, 0xff, 0xb7, 0xad, 0x9b, 0xff, 0xb7, 0xad, 0x9b, 0xff, 0xb7, 0xad, 0x9b, 0xff, 0xb7, 0xad, 0x9b, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xb7, 0xad, 0x9b, 0xff, 0xb7, 0xad, 0x9b, 0xff, 0xb7, 0xad, 0x9b, 0xff, 0xb7, 0xad, 0x9b, 0xff, 0xb7, 0xad, 0x9b, 0xff, 0xb7, 0xad, 0x9b, 0xff, 0xb7, 0xad, 0x9b, 0xff, 0xb7, 0xad, 0x9b, 0xff, 0xb7, 0xad, 0x9b, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xb7, 0xad, 0x9b, 0xff, 0xff, 0xff, 0xff, 0xff, 0xb7, 0xad, 0x9b, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xb7, 0xad, 0x9b, 0xff, 0xb7, 0xad, 0x9b, 0xff, 0xb7, 0xad, 0x9b, 0xff, 0xb7, 0xad, 0x9b, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xb7, 0xad, 0x9b, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xb7, 0xad, 0x9b, 0xff, 0xb7, 0xad, 0x9b, 0xff, 0xb7, 0xad, 0x9b, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xb7, 0xad, 0x9b, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xb7, 0xad, 0x9b, 0xff, 0xb7, 0xad, 0x9b, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xb7, 0xad, 0x9b, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xb7, 0xad, 0x9b, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xb7, 0xad, 0x9b, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xb7, 0xad, 0x9b, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xb7, 0xad, 0x9b, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xb7, 0xad, 0x9b, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xb7, 0xad, 0x9b, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xb7, 0xad, 0x9b, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xb7, 0xad, 0x9b, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xb7, 0xad, 0x9b, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xb7, 0xad, 0x9b, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xb7, 0xad, 0x9b, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xb7, 0xad, 0x9b, 0xff, 0xb7, 0xad, 0x9b, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xb7, 0xad, 0x9b, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xb7, 0xad, 0x9b, 0xff, 0xb7, 0xad, 0x9b, 0xff, 0xb7, 0xad, 0x9b, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xb7, 0xad, 0x9b, 0xff, 0xb7, 0xad, 0x9b, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xb7, 0xad, 0x9b, 0xff, 0xb7, 0xad, 0x9b, 0xff, 0xb7, 0xad, 0x9b, 0xff, 0xb7, 0xad, 0x9b, 0xff, 0xb7, 0xad, 0x9b, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xb7, 0xad, 0x9b, 0xff, 0xb7, 0xad, 0x9b, 0xff, 0xb7, 0xad, 0x9b, 0xff, 0x87, 0x7e, 0x84, 0xff, 0x87, 0x7e, 0x84, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x87, 0x7e, 0x84, 0xff, 0x87, 0x7e, 0x84, 0xff, 0xb7, 0xad, 0x9b, 0xff, 0x87, 0x7e, 0x84, 0xff, 0xb7, 0xad, 0x9b, 0xff, 0x87, 0x7e, 0x84, 0xff, 0x87, 0x7e, 0x84, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xb7, 0xad, 0x9b, 0xff, 0xb7, 0xad, 0x9b, 0xff, 0xb7, 0xad, 0x9b, 0xff, 0xb7, 0xad, 0x9b, 0xff, 0xb7, 0xad, 0x9b, 0xff, 0x87, 0x7e, 0x84, 0xff, 0xb7, 0xad, 0x9b, 0xff, 0xb7, 0xad, 0x9b, 0xff, 0xb7, 0xad, 0x9b, 0xff, 0x00, 0x00, 0x00, 0x00, 0xb7, 0xad, 0x9b, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xb7, 0xad, 0x9b, 0xff, 0xb7, 0xad, 0x9b, 0xff, 0xb7, 0xad, 0x9b, 0xff, 0xb7, 0xad, 0x9b, 0xff, 0xb7, 0xad, 0x9b, 0xff, 0xb7, 0xad, 0x9b, 0xff, 0xb7, 0xad, 0x9b, 0xff, 0x87, 0x7e, 0x84, 0xff, 0xb7, 0xad, 0x9b, 0xff, 0xb7, 0xad, 0x9b, 0xff, 0xb7, 0xad, 0x9b, 0xff, 0xb7, 0xad, 0x9b, 0xff, 0xb7, 0xad, 0x9b, 0xff, 0xb7, 0xad, 0x9b, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xb7, 0xad, 0x9b, 0xff, 0xb7, 0xad, 0x9b, 0xff, 0x00, 0x00, 0x00, 0x00, 0xb7, 0xad, 0x9b, 0xff, 0xb7, 0xad, 0x9b, 0xff, 0xb7, 0xad, 0x9b, 0xff, 0xb7, 0xad, 0x9b, 0xff, 0xb7, 0xad, 0x9b, 0xff, 0xb7, 0xad, 0x9b, 0xff, 0xb7, 0xad, 0x9b, 0xff, 0xb7, 0xad, 0x9b, 0xff, 0xb7, 0xad, 0x9b, 0xff, 0xb7, 0xad, 0x9b, 0xff, 0xb7, 0xad, 0x9b, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xb7, 0xad, 0x9b, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xb7, 0xad, 0x9b, 0xff, 0xb7, 0xad, 0x9b, 0xff, 0xb7, 0xad, 0x9b, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xb7, 0xad, 0x9b, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xb7, 0xad, 0x9b, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xb7, 0xad, 0x9b, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xb7, 0xad, 0x9b, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xb7, 0xad, 0x9b, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xb7, 0xad, 0x9b, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xb7, 0xad, 0x9b, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xb7, 0xad, 0x9b, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xb7, 0xad, 0x9b, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xb7, 0xad, 0x9b, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xb7, 0xad, 0x9b, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xb7, 0xad, 0x9b, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xb7, 0xad, 0x9b, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xb7, 0xad, 0x9b, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xb7, 0xad, 0x9b, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xb7, 0xad, 0x9b, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xb7, 0xad, 0x9b, 0xff, 0xb7, 0xad, 0x9b, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xb7, 0xad, 0x9b, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xb7, 0xad, 0x9b, 0xff, 0xb7, 0xad, 0x9b, 0xff, 0xb7, 0xad, 0x9b, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xb7, 0xad, 0x9b, 0xff, 0xb7, 0xad, 0x9b, 0xff, 0xb7, 0xad, 0x9b, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xb7, 0xad, 0x9b, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xb7, 0xad, 0x9b, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xb7, 0xad, 0x9b, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xb7, 0xad, 0x9b, 0xff, 0xb7, 0xad, 0x9b, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xb7, 0xad, 0x9b, 0xff, 0xb7, 0xad, 0x9b, 0xff, 0x00, 0x00, 0x00, 0x00, 0xb7, 0xad, 0x9b, 0xff, 0xb7, 0xad, 0x9b, 0xff, 0xb7, 0xad, 0x9b, 0xff, 0xb7, 0xad, 0x9b, 0xff, 0xb7, 0xad, 0x9b, 0xff, 0xb7, 0xad, 0x9b, 0xff, 0xb7, 0xad, 0x9b, 0xff, 0xb7, 0xad, 0x9b, 0xff, 0xb7, 0xad, 0x9b, 0xff, 0x00, 0x00, 0x00, 0x00, 0xb7, 0xad, 0x9b, 0xff, 0xb7, 0xad, 0x9b, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x87, 0x7e, 0x84, 0xff, 0xb7, 0xad, 0x9b, 0xff, 0x87, 0x7e, 0x84, 0xff, 0x00, 0x00, 0x00, 0x00, 0xb7, 0xad, 0x9b, 0xff, 0x00, 0x00, 0x00, 0x00, 0x87, 0x7e, 0x84, 0xff, 0xb7, 0xad, 0x9b, 0xff, 0x87, 0x7e, 0x84, 0xff, 0xb7, 0xad, 0x9b, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x87, 0x7e, 0x84, 0xff, 0xb7, 0xad, 0x9b, 0xff, 0x87, 0x7e, 0x84, 0xff, 0x00, 0x00, 0x00, 0x00, 0xb7, 0xad, 0x9b, 0xff, 0x87, 0x7e, 0x84, 0xff, 0x87, 0x7e, 0x84, 0xff, 0xb7, 0xad, 0x9b, 0xff, 0x87, 0x7e, 0x84, 0xff, 0x87, 0x7e, 0x84, 0xff, 0xb7, 0xad, 0x9b, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xb7, 0xad, 0x9b, 0xff, 0xb7, 0xad, 0x9b, 0xff, 0x87, 0x7e, 0x84, 0xff, 0x87, 0x7e, 0x84, 0xff, 0x87, 0x7e, 0x84, 0xff, 0xb7, 0xad, 0x9b, 0xff, 0xb7, 0xad, 0x9b, 0xff, 0x87, 0x7e, 0x84, 0xff, 0x87, 0x7e, 0x84, 0xff, 0xb7, 0xad, 0x9b, 0xff, 0x87, 0x7e, 0x84, 0xff, 0xb7, 0xad, 0x9b, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
]

const Global_Alien1 =[]


const Global_Alien2 =[]

const Global_Army =[
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x39, 0x3c, 0x32, 0xff, 0x6e, 0x94, 0x37, 0xff, 0x39, 0x3c, 0x32, 0xff, 0x6e, 0x94, 0x37, 0xff, 0x39, 0x3c, 0x32, 0xff, 0x6e, 0x94, 0x37, 0xff, 0x39, 0x3c, 0x32, 0xff, 0x6e, 0x94, 0x37, 0xff, 0x39, 0x3c, 0x32, 0xff, 0x6e, 0x94, 0x37, 0xff, 0x39, 0x3c, 0x32, 0xff, 0x6e, 0x94, 0x37, 0xff, 0x39, 0x3c, 0x32, 0xff, 0x6e, 0x94, 0x37, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6e, 0x94, 0x37, 0xff, 0x39, 0x3c, 0x32, 0xff, 0x6e, 0x94, 0x37, 0xff, 0x39, 0x3c, 0x32, 0xff, 0x6e, 0x94, 0x37, 0xff, 0x39, 0x3c, 0x32, 0xff, 0x6e, 0x94, 0x37, 0xff, 0x39, 0x3c, 0x32, 0xff, 0x6e, 0x94, 0x37, 0xff, 0x39, 0x3c, 0x32, 0xff, 0x6e, 0x94, 0x37, 0xff, 0x39, 0x3c, 0x32, 0xff, 0x6e, 0x94, 0x37, 0xff, 0x39, 0x3c, 0x32, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x39, 0x3c, 0x32, 0xff, 0x6e, 0x94, 0x37, 0xff, 0x39, 0x3c, 0x32, 0xff, 0x6e, 0x94, 0x37, 0xff, 0x39, 0x3c, 0x32, 0xff, 0x6e, 0x94, 0x37, 0xff, 0x39, 0x3c, 0x32, 0xff, 0x6e, 0x94, 0x37, 0xff, 0x39, 0x3c, 0x32, 0xff, 0x6e, 0x94, 0x37, 0xff, 0x39, 0x3c, 0x32, 0xff, 0x6e, 0x94, 0x37, 0xff, 0x39, 0x3c, 0x32, 0xff, 0x6e, 0x94, 0x37, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6e, 0x94, 0x37, 0xff, 0x39, 0x3c, 0x32, 0xff, 0x6e, 0x94, 0x37, 0xff, 0x39, 0x3c, 0x32, 0xff, 0x6e, 0x94, 0x37, 0xff, 0x39, 0x3c, 0x32, 0xff, 0x6e, 0x94, 0x37, 0xff, 0x39, 0x3c, 0x32, 0xff, 0x6e, 0x94, 0x37, 0xff, 0x39, 0x3c, 0x32, 0xff, 0x6e, 0x94, 0x37, 0xff, 0x39, 0x3c, 0x32, 0xff, 0x6e, 0x94, 0x37, 0xff, 0x39, 0x3c, 0x32, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6e, 0x94, 0x37, 0xff, 0x39, 0x3c, 0x32, 0xff, 0x6e, 0x94, 0x37, 0xff, 0x39, 0x3c, 0x32, 0xff, 0x6e, 0x94, 0x37, 0xff, 0x39, 0x3c, 0x32, 0xff, 0x6e, 0x94, 0x37, 0xff, 0x39, 0x3c, 0x32, 0xff, 0x6e, 0x94, 0x37, 0xff, 0x39, 0x3c, 0x32, 0xff, 0x6e, 0x94, 0x37, 0xff, 0x39, 0x3c, 0x32, 0xff, 0x6e, 0x94, 0x37, 0xff, 0x39, 0x3c, 0x32, 0xff, 0x6e, 0x94, 0x37, 0xff, 0x6e, 0x94, 0x37, 0xff, 0x6e, 0x94, 0x37, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x24, 0x4b, 0x52, 0xff, 0x00, 0x00, 0x00, 0x00, 0x9a, 0xc3, 0xee, 0xff, 0x9a, 0xc3, 0xee, 0xff, 0x6e, 0x94, 0x37, 0xff, 0x34, 0x20, 0x22, 0xff, 0x34, 0x20, 0x22, 0xff, 0x6e, 0x94, 0x37, 0xff, 0x6e, 0x94, 0x37, 0xff, 0x6e, 0x94, 0x37, 0xff, 0x34, 0x20, 0x22, 0xff, 0x34, 0x20, 0x22, 0xff, 0x6e, 0x94, 0x37, 0xff, 0x6e, 0x94, 0x37, 0xff, 0x9a, 0xc3, 0xee, 0xff, 0x9a, 0xc3, 0xee, 0xff, 0x00, 0x00, 0x00, 0x00, 0x24, 0x4b, 0x52, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x24, 0x4b, 0x52, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x9a, 0xc3, 0xee, 0xff, 0x9a, 0xc3, 0xee, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x34, 0x20, 0x22, 0xff, 0x9a, 0xc3, 0xee, 0xff, 0x34, 0x20, 0x22, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x9a, 0xc3, 0xee, 0xff, 0x9a, 0xc3, 0xee, 0xff, 0x9a, 0xc3, 0xee, 0xff, 0x00, 0x00, 0x00, 0x00, 0x24, 0x4b, 0x52, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xb7, 0xad, 0x9b, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x9a, 0xc3, 0xee, 0xff, 0x9a, 0xc3, 0xee, 0xff, 0xff, 0xff, 0xff, 0xff, 0x34, 0x20, 0x22, 0xff, 0x9a, 0xc3, 0xee, 0xff, 0x9a, 0xc3, 0xee, 0xff, 0x9a, 0xc3, 0xee, 0xff, 0x34, 0x20, 0x22, 0xff, 0xff, 0xff, 0xff, 0xff, 0x9a, 0xc3, 0xee, 0xff, 0x9a, 0xc3, 0xee, 0xff, 0x9a, 0xc3, 0xee, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xb7, 0xad, 0x9b, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x9a, 0xc3, 0xee, 0xff, 0x9a, 0xc3, 0xee, 0xff, 0xff, 0xff, 0xff, 0xff, 0x34, 0x20, 0x22, 0xff, 0x9a, 0xc3, 0xee, 0xff, 0x9a, 0xc3, 0xee, 0xff, 0x9a, 0xc3, 0xee, 0xff, 0x34, 0x20, 0x22, 0xff, 0xff, 0xff, 0xff, 0xff, 0x9a, 0xc3, 0xee, 0xff, 0x9a, 0xc3, 0xee, 0xff, 0x9a, 0xc3, 0xee, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xb7, 0xad, 0x9b, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xb7, 0xad, 0x9b, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x9a, 0xc3, 0xee, 0xff, 0x9a, 0xc3, 0xee, 0xff, 0x9a, 0xc3, 0xee, 0xff, 0x9a, 0xc3, 0xee, 0xff, 0x9a, 0xc3, 0xee, 0xff, 0x9a, 0xc3, 0xee, 0xff, 0x9a, 0xc3, 0xee, 0xff, 0x9a, 0xc3, 0xee, 0xff, 0x9a, 0xc3, 0xee, 0xff, 0x9a, 0xc3, 0xee, 0xff, 0x9a, 0xc3, 0xee, 0xff, 0x9a, 0xc3, 0xee, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x87, 0x7e, 0x84, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xb7, 0xad, 0x9b, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x9a, 0xc3, 0xee, 0xff, 0x34, 0x20, 0x22, 0xff, 0x34, 0x20, 0x22, 0xff, 0x34, 0x20, 0x22, 0xff, 0x34, 0x20, 0x22, 0xff, 0x34, 0x20, 0x22, 0xff, 0x34, 0x20, 0x22, 0xff, 0x34, 0x20, 0x22, 0xff, 0x34, 0x20, 0x22, 0xff, 0x34, 0x20, 0x22, 0xff, 0x9a, 0xc3, 0xee, 0xff, 0x9a, 0xc3, 0xee, 0xff, 0x00, 0x00, 0x00, 0x00, 0xb7, 0xad, 0x9b, 0xff, 0x87, 0x7e, 0x84, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x87, 0x7e, 0x84, 0xff, 0xb7, 0xad, 0x9b, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xb7, 0xad, 0x9b, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x9a, 0xc3, 0xee, 0xff, 0x9a, 0xc3, 0xee, 0xff, 0x34, 0x20, 0x22, 0xff, 0x34, 0x20, 0x22, 0xff, 0x34, 0x20, 0x22, 0xff, 0x34, 0x20, 0x22, 0xff, 0x34, 0x20, 0x22, 0xff, 0x34, 0x20, 0x22, 0xff, 0x34, 0x20, 0x22, 0xff, 0x9a, 0xc3, 0xee, 0xff, 0x9a, 0xc3, 0xee, 0xff, 0x9a, 0xc3, 0xee, 0xff, 0x00, 0x00, 0x00, 0x00, 0xb7, 0xad, 0x9b, 0xff, 0x87, 0x7e, 0x84, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x87, 0x7e, 0x84, 0xff, 0x6a, 0x6a, 0x69, 0xff, 0x87, 0x7e, 0x84, 0xff, 0xb7, 0xad, 0x9b, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xb7, 0xad, 0x9b, 0xff, 0xb7, 0xad, 0x9b, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x9a, 0xc3, 0xee, 0xff, 0x9a, 0xc3, 0xee, 0xff, 0x34, 0x20, 0x22, 0xff, 0x34, 0x20, 0x22, 0xff, 0x34, 0x20, 0x22, 0xff, 0x34, 0x20, 0x22, 0xff, 0x34, 0x20, 0x22, 0xff, 0x9a, 0xc3, 0xee, 0xff, 0x9a, 0xc3, 0xee, 0xff, 0x9a, 0xc3, 0xee, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x87, 0x7e, 0x84, 0xff, 0x87, 0x7e, 0x84, 0xff, 0x87, 0x7e, 0x84, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xb7, 0xad, 0x9b, 0xff, 0xb7, 0xad, 0x9b, 0xff, 0x00, 0x00, 0x00, 0x00, 0x87, 0x7e, 0x84, 0xff, 0x87, 0x7e, 0x84, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x66, 0xa0, 0xd9, 0xff, 0x9a, 0xc3, 0xee, 0xff, 0x9a, 0xc3, 0xee, 0xff, 0x9a, 0xc3, 0xee, 0xff, 0x9a, 0xc3, 0xee, 0xff, 0x9a, 0xc3, 0xee, 0xff, 0x9a, 0xc3, 0xee, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x00, 0x00, 0x00, 0x00, 0x87, 0x7e, 0x84, 0xff, 0x9a, 0xc3, 0xee, 0xff, 0x9a, 0xc3, 0xee, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xb7, 0xad, 0x9b, 0xff, 0xb7, 0xad, 0x9b, 0xff, 0xb7, 0xad, 0x9b, 0xff, 0x87, 0x7e, 0x84, 0xff, 0x66, 0xa0, 0xd9, 0xff, 0x66, 0xa0, 0xd9, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x66, 0xa0, 0xd9, 0xff, 0x66, 0xa0, 0xd9, 0xff, 0x66, 0xa0, 0xd9, 0xff, 0x66, 0xa0, 0xd9, 0xff, 0x66, 0xa0, 0xd9, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x66, 0xa0, 0xd9, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x9a, 0xc3, 0xee, 0xff, 0x9a, 0xc3, 0xee, 0xff, 0x9a, 0xc3, 0xee, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xb7, 0xad, 0x9b, 0xff, 0xb7, 0xad, 0x9b, 0xff, 0xb7, 0xad, 0x9b, 0xff, 0x87, 0x7e, 0x84, 0xff, 0x66, 0xa0, 0xd9, 0xff, 0x66, 0xa0, 0xd9, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x66, 0xa0, 0xd9, 0xff, 0x66, 0xa0, 0xd9, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x66, 0xa0, 0xd9, 0xff, 0x66, 0xa0, 0xd9, 0xff, 0x66, 0xa0, 0xd9, 0xff, 0x9a, 0xc3, 0xee, 0xff, 0x9a, 0xc3, 0xee, 0xff, 0x9a, 0xc3, 0xee, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xb7, 0xad, 0x9b, 0xff, 0xb7, 0xad, 0x9b, 0xff, 0xb7, 0xad, 0x9b, 0xff, 0x87, 0x7e, 0x84, 0xff, 0x31, 0x39, 0x66, 0xff, 0x66, 0xa0, 0xd9, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x50, 0xe5, 0x99, 0xff, 0x50, 0xe5, 0x99, 0xff, 0x50, 0xe5, 0x99, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x66, 0xa0, 0xd9, 0xff, 0x66, 0xa0, 0xd9, 0xff, 0x66, 0xa0, 0xd9, 0xff, 0x66, 0xa0, 0xd9, 0xff, 0x87, 0x7e, 0x84, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xb7, 0xad, 0x9b, 0xff, 0xb7, 0xad, 0x9b, 0xff, 0x87, 0x7e, 0x84, 0xff, 0x9a, 0xc3, 0xee, 0xff, 0x31, 0x39, 0x66, 0xff, 0x66, 0xa0, 0xd9, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x50, 0xe5, 0x99, 0xff, 0x50, 0xe5, 0x99, 0xff, 0x50, 0xe5, 0x99, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x66, 0xa0, 0xd9, 0xff, 0x66, 0xa0, 0xd9, 0xff, 0x66, 0xa0, 0xd9, 0xff, 0xb7, 0xad, 0x9b, 0xff, 0xb7, 0xad, 0x9b, 0xff, 0x87, 0x7e, 0x84, 0xff, 0xb7, 0xad, 0x9b, 0xff, 0xb7, 0xad, 0x9b, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x87, 0x7e, 0x84, 0xff, 0x87, 0x7e, 0x84, 0xff, 0x9a, 0xc3, 0xee, 0xff, 0x9a, 0xc3, 0xee, 0xff, 0x31, 0x39, 0x66, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x50, 0xe5, 0x99, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x50, 0xe5, 0x99, 0xff, 0x50, 0xe5, 0x99, 0xff, 0x50, 0xe5, 0x99, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x87, 0x7e, 0x84, 0xff, 0x87, 0x7e, 0x84, 0xff, 0x00, 0x00, 0x00, 0x00, 0x9a, 0xc3, 0xee, 0xff, 0x9a, 0xc3, 0xee, 0xff, 0x31, 0x39, 0x66, 0xff, 0x31, 0x39, 0x66, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x50, 0xe5, 0x99, 0xff, 0x50, 0xe5, 0x99, 0xff, 0x50, 0xe5, 0x99, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x87, 0x7e, 0x84, 0xff, 0x00, 0x00, 0x00, 0x00, 0x30, 0xbe, 0x6a, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x31, 0x39, 0x66, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x50, 0xe5, 0x99, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0xbe, 0x6a, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0xbe, 0x6a, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x50, 0xe5, 0x99, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0xbe, 0x6a, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0xbe, 0x6a, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x39, 0x3c, 0x32, 0xff, 0x39, 0x3c, 0x32, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x39, 0x3c, 0x32, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2f, 0x69, 0x4b, 0xff, 0x39, 0x3c, 0x32, 0xff, 0x39, 0x3c, 0x32, 0xff, 0x39, 0x3c, 0x32, 0xff, 0x39, 0x3c, 0x32, 0xff, 0x39, 0x3c, 0x32, 0xff, 0x39, 0x3c, 0x32, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x24, 0x4b, 0x52, 0xff, 0x24, 0x4b, 0x52, 0xff, 0x24, 0x4b, 0x52, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x24, 0x4b, 0x52, 0xff, 0x24, 0x4b, 0x52, 0xff, 0x24, 0x4b, 0x52, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x24, 0x4b, 0x52, 0xff, 0x24, 0x4b, 0x52, 0xff, 0x24, 0x4b, 0x52, 0xff, 0x24, 0x4b, 0x52, 0xff, 0x24, 0x4b, 0x52, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x24, 0x4b, 0x52, 0xff, 0x24, 0x4b, 0x52, 0xff, 0x24, 0x4b, 0x52, 0xff, 0x24, 0x4b, 0x52, 0xff, 0x24, 0x4b, 0x52, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 

]

const Global_Army1 =[]

const Global_Army2 =[]


const Global_Headge = [
  0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f,
  0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe,
  0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b,
  0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff,
  0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30,
  0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69,
  0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a,
  0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff,
  0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f,
  0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69,
  0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a,
  0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff,
  0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f,
  0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe,
  0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b,
  0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff,
  0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30,
  0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69,
  0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b,
  0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff,
  0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30,
  0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69,
  0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a,
  0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff,
  0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f,
  0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe,
  0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b,
  0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff,
  0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f,
  0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe,
  0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b,
  0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff,
  0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30,
  0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69,
  0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a,
  0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff,
  0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f,
  0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe,
  0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x30, 0xbe, 0x6a,
  0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff,
  0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f,
  0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe,
  0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b,
  0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff,
  0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30,
  0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69,
  0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a,
  0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff,
  0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f,
  0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69,
  0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a,
  0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff,
  0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f,
  0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe,
  0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b,
  0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff,
  0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30,
  0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69,
  0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b,
  0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff,
  0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30,
  0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69,
  0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a,
  0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff,
  0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f,
  0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe,
  0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b,
  0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff,
  0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30,
  0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69,
  0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a,
  0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff,
  0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f,
  0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe,
  0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b,
  0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff,
  0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30,
  0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69,
  0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b,
  0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff,
  0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30,
  0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69,
  0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a,
  0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff,
  0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f,
  0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe,
  0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b,
  0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff,
  0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f,
  0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe,
  0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b,
  0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff,
  0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30,
  0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69,
  0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a,
  0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff,
  0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f,
  0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69,
  0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a,
  0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff,
  0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f,
  0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe,
  0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b,
  0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff,
  0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30,
  0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69,
  0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a,
  0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff,
  0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f,
  0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe,
  0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b,
  0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff,
  0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30,
  0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69,
  0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a,
  0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff,
  0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f,
  0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69,
  0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a,
  0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff,
  0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f,
  0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe,
  0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b,
  0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff,
  0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30,
  0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69,
  0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a,
  0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff,
  0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f,
  0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe,
  0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b,
  0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff,
  0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30,
  0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69,
  0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a,
  0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff,
  0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f,
  0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69,
  0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a,
  0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff,
  0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f,
  0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe,
  0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b,
  0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff,
  0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30,
  0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69,
  0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a,
  0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff,
  0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30,
  0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69,
  0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a,
  0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff,
  0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f,
  0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe,
  0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b,
  0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff,
  0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f,
  0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe,
  0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b,
  0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff,
  0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30,
  0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69,
  0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a,
  0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff,
  0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f,
  0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe,
  0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b,
  0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff,
  0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30,
  0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69,
  0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a,
  0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff,
  0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f,
  0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe,
  0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b,
  0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff,
  0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f,
  0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe,
  0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b,
  0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff,
  0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30,
  0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69,
  0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a,
  0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff,
  0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f,
  0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe,
  0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b,
  0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff,
  0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30,
  0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69,
  0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a,
  0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff,
  0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f,
  0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe,
  0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b,
  0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff,
  0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f,
  0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe,
  0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b,
  0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff,
  0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30,
  0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69,
  0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a,
  0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff,
  0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f,
  0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe,
  0x6a, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a,
  0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff,
  0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f,
  0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe,
  0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b,
  0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff,
  0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30,
  0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69,
  0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a,
  0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff,
  0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30,
  0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69,
  0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a,
  0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff,
  0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f,
  0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe,
  0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b,
  0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff,
  0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30,
  0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x30, 0xbe,
  0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b,
  0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff,
  0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30,
  0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69,
  0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a,
  0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff,
  0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f,
  0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe,
  0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b,
  0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff,
  0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f,
  0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe,
  0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b,
  0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff,
  0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30,
  0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69,
  0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a,
  0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff,
  0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f,
  0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69,
  0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a,
  0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff,
  0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f,
  0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe,
  0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b,
  0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff,
  0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30,
  0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69,
  0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a,
  0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff,
  0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30,
  0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69,
  0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a,
  0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff,
  0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f,
  0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe,
  0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b,
  0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff,
  0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30,
  0xbe, 0x6a, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe,
  0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b,
  0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff,
  0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30,
  0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69,
  0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a,
  0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff,
  0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f,
  0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe,
  0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b,
  0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff,
  0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30,
  0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69,
  0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a,
  0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff,
  0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f,
  0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe,
  0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b,
  0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff,
  0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f,
  0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69,
  0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b,
  0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff,
  0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30,
  0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69,
  0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a,
  0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff,
  0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f,
  0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe,
  0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b,
  0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff,
  0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f,
  0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe,
  0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b,
  0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff,
  0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30,
  0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69,
  0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a,
  0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff,
  0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f,
  0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69,
  0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a,
  0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff,
  0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f,
  0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe,
  0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b,
  0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff,
  0x2f, 0x69, 0x4b, 0xff, 0x30, 0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x30,
  0xbe, 0x6a, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69,
  0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b,
  0xff,
];

const Global_Ammo = [  0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 
  0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 
  0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 
  0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 
  0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 
  0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 
  0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 
  0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 
  0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 
  0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 
  0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 
  0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 
  0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 
  0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 
  0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 
  0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 
  0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 
  0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 
  0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x32, 0x32, 0xac, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 
  0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 
  0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 
  0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 
  0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 
  0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x32, 0x32, 0xac, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x36, 0xf2, 0xfb, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 
  0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 
  0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 
  0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 
  0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 
  0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 
  0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 
  0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 
  0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, 0x2f, 0x69, 0x4b, 0xff, ]

class GameObject {
  constructor() {
    this.loc = [0, 0, 0];
    this.rot = [0, 0, 0];
    this.isTrigger = false;
    this.collissionRadius = 1.0;
    this.velocity = [0, 0, 0];
    this.angVelocity = [0, 0, 0];
    this.name = "default";
    this.id = 0;
    this.prefab;
    this.transform = new Transform();
  }

  Magnitude( vect){
    return Math.sqrt(vect[0] * vect[0] + vect[1] * vect[1] + vect[2] * vect[2]);
  }


  Move() {
    var tempP = [0, 0, 0];
    for (var i = 0; i < 3; i++) {
      tempP[i] = this.loc[i];
      tempP[i] += this.velocity[i];
      this.rot[i] += this.angVelocity[i];
    }
    if (!this.isTrigger) {
      var clear = true;
      for (var so in m.Solid) {
        if (m.Solid[so] != this) {
          if (
            m.CheckCollision(
              tempP,
              this.collissionRadius,
              m.Solid[so].loc,
              m.Solid[so].collissionRadius
            )
          ) {
            //console.log("Collision");
			this.OnCollision(m.Solid[so]);
            clear = false;
          }
        }
      }
      if (clear) {
        this.loc = tempP;
      }
    } else {
      this.loc = tempP;
    }
  }
  OnCollision(other) {}
  Update() {
    console.error(this.name + " update() is NOT IMPLEMENTED!");
  }
  Render(program) {
    console.error(this.name + " render() is NOT IMPLEMENTED!");
  }
}
class Ground extends GameObject {
  constructor() {
    super();
    this.buffer = gl.createBuffer();

    gl.bindBuffer(gl.ARRAY_BUFFER, this.buffer);

    //!!!!!!!!!!!!!TEXTURE CHANGE !!!!!!!!!!!
    this.picture = Global_Floor;
    this.vertices = [
      //  X     Y  Z     s t
      -1000, 0, -1000, 0, 0, 1000, 0, -1000, 1000, 0, -1000, 0, 1000, 0, 1000,
      1000, 0, 1000, 1000, 1000,
    ];

    this.MyTexture = gl.createTexture();
    gl.bindTexture(gl.TEXTURE_2D, this.MyTexture);
    //We only want to do this once.
    //void gl.texImage2D(target, level, internalformat, width, height, border, format,
    //type, ArrayBufferView? pixels);
    gl.texImage2D(
      gl.TEXTURE_2D,
      0,
      gl.RGBA,
      32,
      32,
      0,
      gl.RGBA,
      gl.UNSIGNED_BYTE,
      new Uint8Array(this.picture)
    );

    //!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
    gl.bufferData(
      gl.ARRAY_BUFFER,
      new Float32Array(this.vertices),
      gl.STATIC_DRAW
    );
    this.loc = [0, 0, 0];
    this.rot = [0, 0, 0];
  }
  Update() {
    //Do Nothing
  }
  Render(program) {
    var positionAttributeLocation = gl.getAttribLocation(program, "a_position");
    gl.bindBuffer(gl.ARRAY_BUFFER, this.buffer);
    var size = 3; // 2 components per iteration
    var type = gl.FLOAT; // the data is 32bit floats
    var normalize = false; // don't normalize the data

    //MAKE SURE YOU CHANGE THIS TO 5 FOR TEXTURES
    var stride = 5 * Float32Array.BYTES_PER_ELEMENT; //Size in bytes of each element     // 0 = move forward size * sizeof(type) each iteration to get the next position
    var offset = 0; // start at the beginning of the buffer
    gl.enableVertexAttribArray(positionAttributeLocation);
    gl.vertexAttribPointer(
      positionAttributeLocation,
      size,
      type,
      normalize,
      stride,
      offset
    );

    //!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!TEXTURE CHANGE !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
    //Now we have to do this for color
    var TexAttributeLocation = gl.getAttribLocation(program, "texcord");
    //We don't have to bind because we already have the correct buffer bound.
    size = 2;
    type = gl.FLOAT;
    normalize = false;
    stride = 5 * Float32Array.BYTES_PER_ELEMENT; //Size in bytes of each element
    offset = 3 * Float32Array.BYTES_PER_ELEMENT; //size of the offset
    gl.enableVertexAttribArray(TexAttributeLocation);
    gl.vertexAttribPointer(
      TexAttributeLocation,
      size,
      type,
      normalize,
      stride,
      offset
    );

    gl.bindTexture(gl.TEXTURE_2D, this.MyTexture);
    //setup S
    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.REPEAT); //gl.MIRRORED_REPEAT//gl.CLAMP_TO_EDGE
    //Sets up our T
    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.REPEAT); //gl.MIRRORED_REPEAT//gl.CLAMP_TO_EDGE
    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);
    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);

    //!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

    var tranLoc = gl.getUniformLocation(program, "transform");
    gl.uniform3fv(tranLoc, new Float32Array(this.loc));
    var thetaLoc = gl.getUniformLocation(program, "rotation");
    gl.uniform3fv(thetaLoc, new Float32Array(this.rot));

    //var ibuffer = gl.createBuffer();
    //gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER,this.ibuffer);
    //gl.bufferData(gl.ELEMENT_ARRAY_BUFFER,new Uint8Array(this.indexOrder),gl.STATIC_DRAW);
    //gl.drawElements(gl.TRIANGLES,this.indexOrder.length,gl.UNSIGNED_BYTE,0);
    gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);
  }
}
class Hex extends GameObject {
  constructor() {
    super();
    this.angVelocity = [0, 0.0, 0];
    this.isTrigger = false;
    this.buffer = gl.createBuffer();

    this.collissionRadius = 0.25;
    gl.bindBuffer(gl.ARRAY_BUFFER, this.buffer);

    //!!!!!!!!!!!!!!!!!Changes due to texture
    this.MyPicture = Global_Floor;
    //Get vertices from announcements

    this.vertexCount = 36;
    this.vertices = [
      -1, -1, -1, 0.644, 0.16, -1, -1, 1, 0.644, 0.16, -1, 1, 1, 0.644, 0.16,
      -1, -1, -1, 0.644, 0.16, -1, 1, 1, 0.644, 0.16, -1, 1, -1, 0.644, 0.16,
      -1, 1, -1, 0.644, 0.16, -1, 1, 1, 0.644, 0.16, 1, 1, 1, 0.644, 0.16, -1,
      1, -1, 0.644, 0.16, 1, 1, 1, 0.644, 0.16, 1, 1, -1, 0.644, 0.16, 1, 1, -1,
      0.644, 0.16, 1, 1, 1, 0.644, 0.16, 1, -1, 1, 0.644, 0.16, 1, 1, -1, 0.644,
      0.16, 1, -1, 1, 0.644, 0.16, 1, -1, -1, 0.644, 0.16, 1, -1, -1, 0.644,
      0.16, 1, -1, 1, 0.644, 0.16, -1, -1, 1, 0.644, 0.16, 1, -1, -1, 0.644,
      0.16, -1, -1, 1, 0.644, 0.16, -1, -1, -1, 0.644, 0.16, -1, 1, -1, 0.644,
      0.16, 1, 1, -1, 0.644, 0.16, 1, -1, -1, 0.644, 0.16, -1, 1, -1, 0.644,
      0.16, 1, -1, -1, 0.644, 0.16, -1, -1, -1, 0.644, 0.16, 1, 1, 1, 0.644,
      0.16, -1, 1, 1, 0.644, 0.16, -1, -1, 1, 0.644, 0.16, 1, 1, 1, 0.644, 0.16,
      -1, -1, 1, 0.644, 0.16, 1, -1, 1, 0.644, 0.16,
    ];

    this.MyTexture = gl.createTexture();
    gl.bindTexture(gl.TEXTURE_2D, this.MyTexture);
    //We only want to do this once.
    gl.texImage2D(
      gl.TEXTURE_2D,
      0,
      gl.RGBA,
      32,
      32,
      0,
      gl.RGBA,
      gl.UNSIGNED_BYTE,
      new Uint8Array(this.MyPicture)
    );

    //!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

    gl.bufferData(
      gl.ARRAY_BUFFER,
      new Float32Array(this.vertices),
      gl.STATIC_DRAW
    );
    this.loc = [0, 0, 0];
    this.rot = [0, 0, 0];
  }
  Update() {
    this.Move();
  }
  Render(program) {
    var positionAttributeLocation = gl.getAttribLocation(program, "a_position");
    gl.bindBuffer(gl.ARRAY_BUFFER, this.buffer);
    var size = 3; // 2 components per iteration
    var type = gl.FLOAT; // the data is 32bit floats
    var normalize = false; // don't normalize the data

    //Make sure you change this to 5 for your TEXTURES
    var stride = 5 * Float32Array.BYTES_PER_ELEMENT; //Size in bytes of each element     // 0 = move forward size * sizeof(type) each iteration to get the next position
    var offset = 0; // start at the beginning of the buffer
    gl.enableVertexAttribArray(positionAttributeLocation);
    gl.vertexAttribPointer(
      positionAttributeLocation,
      size,
      type,
      normalize,
      stride,
      offset
    );

    //!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!TEXTURE CHANGE !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
    //Now we have to do this for color
    var colorAttributeLocation = gl.getAttribLocation(program, "texcord");
    //We don't have to bind because we already have the correct buffer bound.
    size = 2;
    type = gl.FLOAT;
    normalize = false;
    stride = 5 * Float32Array.BYTES_PER_ELEMENT; //Size in bytes of each element
    offset = 3 * Float32Array.BYTES_PER_ELEMENT; //size of the offset
    gl.enableVertexAttribArray(colorAttributeLocation);
    gl.vertexAttribPointer(
      colorAttributeLocation,
      size,
      type,
      normalize,
      stride,
      offset
    );

    gl.bindTexture(gl.TEXTURE_2D, this.MyTexture);
    //setup S
    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.MIRRORED_REPEAT); //gl.MIRRORED_REPEAT//gl.CLAMP_TO_EDGE
    //Sets up our T
    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.MIRRORED_REPEAT); //gl.MIRRORED_REPEAT//gl.CLAMP_TO_EDGE
    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);
    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);
    //!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

    var tranLoc = gl.getUniformLocation(program, "transform");
    gl.uniform3fv(tranLoc, new Float32Array(this.loc));
    var thetaLoc = gl.getUniformLocation(program, "rotation");
    gl.uniform3fv(thetaLoc, new Float32Array(this.rot));

    //var ibuffer = gl.createBuffer();
    //gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER,this.ibuffer);
    //gl.bufferData(gl.ELEMENT_ARRAY_BUFFER,new Uint8Array(this.indexOrder),gl.STATIC_DRAW);
    //gl.drawElements(gl.TRIANGLES,this.indexOrder.length,gl.UNSIGNED_BYTE,0);
    gl.drawArrays(gl.TRIANGLE_STRIP, 0, this.vertexCount);
  }
}
class Camera extends GameObject {
  constructor() {
    super();

    this.maxHealth = (m.diff <2) ? 5 : 3;
    this.Health = this.maxHealth;
    this.collissionRadius = 0.3;
    this.Ammo = 10;
    this.name = "Player"
    this.canShoot = true;
    this.ShootTimer = 0;
  }
  Update() {
    if (this.Health <= 0) {
      m.OnDeathSound.play();
      m.reset();
    }
    if(this.Health > this.maxHealth){
      this.Health = this.maxHealth;
    }

    m.player.health = this.Health;
    m.player.ammo = this.Ammo;
    m.player.loc = this.loc;

    console.log(this.canShoot + " " + this.ShootTimer);
		if(this.ShootTimer >= 30 && !(this.canShoot)){
			this.canShoot = true;
      this.ShootTimer = 0;
		}else if(this.canShoot == false){
			this.ShootTimer++;
		}

    //Stop the movement UNLESS a button has been pressed
    for (let i = 0; i < 3; i++) {
      this.velocity[i] = 0;
      this.angVelocity[i] = 0;
    }

    if ("A" in m.Keys && m.Keys["A"]) {
      this.rot[1] -= 0.04;
    }
    if ("D" in m.Keys && m.Keys["D"]) {
      this.rot[1] += 0.04;
    }
    if ("W" in m.Keys && m.Keys["W"]) {
      this.transform.doRotations(this.rot);
      this.velocity[0] = this.transform.forward[0] * 0.25;
      this.velocity[2] = this.transform.forward[2] * 0.25;
    } else if ("S" in m.Keys && m.Keys["S"]) {
      this.transform.doRotations(this.rot);
      this.velocity[0] = -this.transform.forward[0] * 0.25;
      this.velocity[2] = -this.transform.forward[2] * 0.25;
    }
    if (" " in m.Keys && m.Keys[" "] && this.Ammo > 0 && this.canShoot) {
      this.canShoot = false;
      this.Ammo -= 1;
      this.transform.doRotations(this.rot);
      var temp = m.CreateObject(
        1,
        Bullet,
        [this.loc[0], this.loc[1], -this.loc[2]],
        [0, 0, 0]
      );
      temp.name = "PlayerBullet";
      m.ShootSound.play();

      this.transform.doRotations(this.rot);

      for (let i = 0; i < 3; i++) {
        //temp.velocity[i] = this.transform.forward[i] * .5;


        temp.velocity[i] = this.transform.forward[i] * 0.4;

      }

      temp.velocity[2] *=-1;

      //temp.velocity = this.transform.forward;
      temp.isTrigger = true;
    }

    this.velocity[2] *= -1;
    this.loc[2] *= -1;
    this.Move();
    this.loc[2] *= -1;
  }
  Render(program) {
    var camLoc = gl.getUniformLocation(program, "worldLoc");
    gl.uniform3fv(camLoc, new Float32Array(this.loc));
    var worldLoc = gl.getUniformLocation(program, "worldRotation");
    gl.uniform3fv(worldLoc, new Float32Array(this.rot));
  }

  OnCollision(other) {
    if(other.name=="Enemy"){
      m.OnDeathSound.play();
      if(m.diff == 1 && m.level > 0){
        m.level--;
        m.UpdateMap();
      }else if(m.diff == 2){
        m.level = 0;
        m.UpdateMap();
      }
      m.reset();
    }
    if(other.name == "Goal"){ 
      m.GoalSound.play();
      m.level +=1;
      m.UpdateMap();
      console.log("Level: "+m.level);
      m.reset();
    }

    if(other.name == "Crate"){
      //m.CrateSound.play();
      m.DestroyObject(other.id);
      this.Ammo += m.rand(0,5);
      this.Health += m.rand(0,2);
    }

    if(other.name == "Bullet"){
      m.HitSound.play();
      this.Health -= 1;
      m.DestroyObject(other.id);
    }

  }
}


class Goal extends GameObject {
  constructor() {
    super();
    this.angVelocity = [0, 0, 0];
    this.isTrigger = false;
    this.buffer = gl.createBuffer();
    this.collissionRadius = 1;
    this.name = "Goal"
    gl.bindBuffer(gl.ARRAY_BUFFER, this.buffer);
    this.Nextmap = m.map2;
    //!!!!!!!!!!!!!!!!!Changes due to texture
    this.MyPicture = Global_Brick;

    //Get vertices from announcements
    this.vertexCount = 54;
    this.vertices = [
      -1, -1, -1, 1.0, 0.0, -1, -1, 1, 0.0, 0.0, -1, 1, 1, 1.0, 0.0, -1, -1, -1,
      0.0, 0.0, -1, 1, 1, 1.0, 0.0, -1, 1, -1, 0.0, 0.0, -1, 1, -1, 1.0, 0.0,
      -1, 1, 1, 0.0, 0.0, 1, 1, 1, 1.0, 0.0, -1, 1, -1, 0.0, 0.0, 1, 1, 1, 1.0,
      0.0, 1, 1, -1, 0.0, 0.0, 1, 1, -1, 1.0, 0.0, 1, 1, 1, 0.0, 0.0, 1, -1, 1,
      1.0, 0.0, 1, 1, -1, 0.0, 0.0, 1, -1, 1, 1.0, 0.0, 1, -1, -1, 0.0, 0.0, 1,
      -1, -1, 1.0, 1.0, 1, -1, 1, 0.0, 1.0, -1, -1, 1, 1.0, 1.0, 1, -1, -1, 0.0,
      1.0, -1, -1, 1, 1.0, 1.0, -1, -1, -1, 0.0, 1.0, -1, 1, -1, 1.0, 1.0, 1, 1,
    ];

    this.MyTexture = gl.createTexture();
    gl.bindTexture(gl.TEXTURE_2D, this.MyTexture);
    //We only want to do this once.
    gl.texImage2D(
      gl.TEXTURE_2D,
      0,
      gl.RGBA,
      32,
      32,
      0,
      gl.RGBA,
      gl.UNSIGNED_BYTE,
      new Uint8Array(this.MyPicture)
    );

    //!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

    gl.bufferData(
      gl.ARRAY_BUFFER,
      new Float32Array(this.vertices),
      gl.STATIC_DRAW
    );
    this.loc = [0, 0, 0];
    this.rot = [0, 0, 0];
  }
  Update() {
    this.Move();
  }
  Render(program) {
    var positionAttributeLocation = gl.getAttribLocation(program, "a_position");
    gl.bindBuffer(gl.ARRAY_BUFFER, this.buffer);
    var size = 3; // 2 components per iteration
    var type = gl.FLOAT; // the data is 32bit floats
    var normalize = false; // don't normalize the data

    //Make sure you change this to 5 for your TEXTURES
    var stride = 5 * Float32Array.BYTES_PER_ELEMENT; //Size in bytes of each element     // 0 = move forward size * sizeof(type) each iteration to get the next position
    var offset = 0; // start at the beginning of the buffer
    gl.enableVertexAttribArray(positionAttributeLocation);
    gl.vertexAttribPointer(
      positionAttributeLocation,
      size,
      type,
      normalize,
      stride,
      offset
    );

    //!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!TEXTURE CHANGE !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
    //Now we have to do this for color
    var colorAttributeLocation = gl.getAttribLocation(program, "texcord");
    //We don't have to bind because we already have the correct buffer bound.
    size = 2;
    type = gl.FLOAT;
    normalize = false;
    stride = 5 * Float32Array.BYTES_PER_ELEMENT; //Size in bytes of each element
    offset = 3 * Float32Array.BYTES_PER_ELEMENT; //size of the offset
    gl.enableVertexAttribArray(colorAttributeLocation);
    gl.vertexAttribPointer(
      colorAttributeLocation,
      size,
      type,
      normalize,
      stride,
      offset
    );

    gl.bindTexture(gl.TEXTURE_2D, this.MyTexture);
    //setup S
    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.REPEAT); //gl.MIRRORED_REPEAT//gl.CLAMP_TO_EDGE
    //Sets up our T
    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.REPEAT); //gl.MIRRORED_REPEAT//gl.CLAMP_TO_EDGE
    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);
    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);
    //!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

    var tranLoc = gl.getUniformLocation(program, "transform");
    gl.uniform3fv(tranLoc, new Float32Array(this.loc));
    var thetaLoc = gl.getUniformLocation(program, "rotation");
    gl.uniform3fv(thetaLoc, new Float32Array(this.rot));

    //var ibuffer = gl.createBuffer();
    //gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER,this.ibuffer);
    //gl.bufferData(gl.ELEMENT_ARRAY_BUFFER,new Uint8Array(this.indexOrder),gl.STATIC_DRAW);
    //gl.drawElements(gl.TRIANGLES,this.indexOrder.length,gl.UNSIGNED_BYTE,0);
    gl.drawArrays(gl.TRIANGLES, 0, this.vertexCount);
  }
}


class Wall extends GameObject {
  constructor() {
    super();
    this.angVelocity = [0, 0, 0];
    this.isTrigger = false;
    this.buffer = gl.createBuffer();
    this.collissionRadius = 1;
    this.name = "Wall";
    gl.bindBuffer(gl.ARRAY_BUFFER, this.buffer);

    //!!!!!!!!!!!!!!!!!Changes due to texture
    this.MyPicture = (m.rand(0,2) == 1) ?  Global_Headge : Global_Brick;

    //Get vertices from announcements
    this.vertexCount = 54;
    this.vertices = [
      -1, -1, -1, 0.0, 0.0,
      -1, -1, 1, 1.0, 0.0, 
      -1, 1, 1, 1.0, 1.0,       
      -1, -1, -1,0.0, 0.0,
      -1, 1, 1, 1.0, 1.0,
      -1, 1, -1, 0.0, 1.0,

      -1,-1,1,0.0,0.0,
      1,1,1,1,1,
      -1,1,1,0,1,
      -1,-1,1,0,0,
      1,-1,1,1,0,
      1,1,1,1,1,

      1,-1,1,0,0,
      1,-1,-1,1,0,
      1,1,1,0,1,
      1,1,1,0,1,
      1,-1,-1,1,0,
      1,1,-1,1,1,

      1,-1,-1,0,0,
      1,1,-1,0,1,
      -1,-1,-1,1,0,
      -1,-1,-1,1,0,
      1,1,-1,0,1,
      -1,1,-1,1,1,

      1,-1,1,1,0,
      -1,-1,1,0,0,
      1,-1,-1,1,1,
      1,-1,-1,1,1,
      -1,-1,-1,0,1,
      -1,-1,1,1,0,


    ];

    this.MyTexture = gl.createTexture();
    gl.bindTexture(gl.TEXTURE_2D, this.MyTexture);
    //We only want to do this once.
    gl.texImage2D(
      gl.TEXTURE_2D,
      0,
      gl.RGBA,
      32,
      32,
      0,
      gl.RGBA,
      gl.UNSIGNED_BYTE,
      new Uint8Array(this.MyPicture)
    );

    //!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

    gl.bufferData(
      gl.ARRAY_BUFFER,
      new Float32Array(this.vertices),
      gl.STATIC_DRAW
    );
    this.loc = [0, 0, 0];
    this.rot = [0, 0, 0];
  }
  Update() {
    this.Move();
  }

  OnCollision(other){
    if(other.name =="Bullet"){
      m.DestroyObject(other.id);
    }

  }
  Render(program) {
    var positionAttributeLocation = gl.getAttribLocation(program, "a_position");
    gl.bindBuffer(gl.ARRAY_BUFFER, this.buffer);
    var size = 3; // 2 components per iteration
    var type = gl.FLOAT; // the data is 32bit floats
    var normalize = false; // don't normalize the data

    //Make sure you change this to 5 for your TEXTURES
    var stride = 5 * Float32Array.BYTES_PER_ELEMENT; //Size in bytes of each element     // 0 = move forward size * sizeof(type) each iteration to get the next position
    var offset = 0; // start at the beginning of the buffer
    gl.enableVertexAttribArray(positionAttributeLocation);
    gl.vertexAttribPointer(
      positionAttributeLocation,
      size,
      type,
      normalize,
      stride,
      offset
    );

    //!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!TEXTURE CHANGE !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
    //Now we have to do this for color
    var colorAttributeLocation = gl.getAttribLocation(program, "texcord");
    //We don't have to bind because we already have the correct buffer bound.
    size = 2;
    type = gl.FLOAT;
    normalize = false;
    stride = 5 * Float32Array.BYTES_PER_ELEMENT; //Size in bytes of each element
    offset = 3 * Float32Array.BYTES_PER_ELEMENT; //size of the offset
    gl.enableVertexAttribArray(colorAttributeLocation);
    gl.vertexAttribPointer(
      colorAttributeLocation,
      size,
      type,
      normalize,
      stride,
      offset
    );

    gl.bindTexture(gl.TEXTURE_2D, this.MyTexture);
    //setup S
    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.REPEAT); //gl.MIRRORED_REPEAT//gl.CLAMP_TO_EDGE
    //Sets up our T
    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.REPEAT); //gl.MIRRORED_REPEAT//gl.CLAMP_TO_EDGE
    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);
    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);
    //!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

    var tranLoc = gl.getUniformLocation(program, "transform");
    gl.uniform3fv(tranLoc, new Float32Array(this.loc));
    var thetaLoc = gl.getUniformLocation(program, "rotation");
    gl.uniform3fv(thetaLoc, new Float32Array(this.rot));

    //var ibuffer = gl.createBuffer();
    //gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER,this.ibuffer);
    //gl.bufferData(gl.ELEMENT_ARRAY_BUFFER,new Uint8Array(this.indexOrder),gl.STATIC_DRAW);
    //gl.drawElements(gl.TRIANGLES,this.indexOrder.length,gl.UNSIGNED_BYTE,0);
    gl.drawArrays(gl.TRIANGLES, 0, 30);
  }


}



class Crate extends GameObject {
  constructor() {
    super();
    this.angVelocity = [0, 0, 0];
    this.isTrigger = false;
    this.buffer = gl.createBuffer();
    this.collissionRadius = 1;
    this.name = "Crate";
    gl.bindBuffer(gl.ARRAY_BUFFER, this.buffer);

    //!!!!!!!!!!!!!!!!!Changes due to texture
    this.MyPicture =Global_Ammo;

    //Get vertices from announcements
    this.vertexCount = 54;
    this.vertices = [
      -.1, -.1, -.1, 0.0, 0.0,
      -.1, -.1, .1, 1.0, 0.0, 
      -.1, .1, .1, 1, 1,       
      -.1, -.1, -.1,0.0, 0.0,
      -.1, .1, .1, 1, 1,
      -.1, .1, -.1, 0.0, 1.0,

      -.1,-.1,.1,0.0,0.0,
      .1,.1,.1,1,1,
      -.1,.1,.1,0,1,
      -.1,-.1,.1,0,0,
      .1,-.1,.1,1,0,
      .1,.1,.1,1,1,

      .1,-.1,.1,0,0,
      .1,-.1,-.1,1,0,
      .1,.1,.1,0,1,
      .1,.1,.1,0,1,
      .1,-.1,-.1,1,0,
      .1,.1,-.1,1,1,

      .1,-.1,-.1,0,0,
      .1,.1,-.1,0,1,
      -.1,-.1,-.1,1,0,
      -.1,-.1,-.1,1,0,
      .1,.1,-.1,0,1,
      -.1,.1,-.1,1,1,

      .1,-.1,.1,1,0,
      -.1,-.1,.1,0,0,
      .1,-.1,-.1,1,1,
      .1,-.1,-.1,1,1,
      -.1,-.1,-.1,0,1,
      -.1,-.1,.1,1,0,


    ];

    this.MyTexture = gl.createTexture();
    gl.bindTexture(gl.TEXTURE_2D, this.MyTexture);
    //We only want to do this once.
    gl.texImage2D(
      gl.TEXTURE_2D,
      0,
      gl.RGBA,
      32,
      32,
      0,
      gl.RGBA,
      gl.UNSIGNED_BYTE,
      new Uint8Array(this.MyPicture)
    );

    //!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

    gl.bufferData(
      gl.ARRAY_BUFFER,
      new Float32Array(this.vertices),
      gl.STATIC_DRAW
    );
    this.loc = [0, 0, 0];
    this.rot = [0, 0, 0];
  }
  Update() {
    this.Move();
  }

  OnCollision(other){
    if(other.name =="Player"){
      m.DestroyObject(this.id);
    }
  }
  Render(program) {
    var positionAttributeLocation = gl.getAttribLocation(program, "a_position");
    gl.bindBuffer(gl.ARRAY_BUFFER, this.buffer);
    var size = 3; // 2 components per iteration
    var type = gl.FLOAT; // the data is 32bit floats
    var normalize = false; // don't normalize the data

    //Make sure you change this to 5 for your TEXTURES
    var stride = 5 * Float32Array.BYTES_PER_ELEMENT; //Size in bytes of each element     // 0 = move forward size * sizeof(type) each iteration to get the next position
    var offset = 0; // start at the beginning of the buffer
    gl.enableVertexAttribArray(positionAttributeLocation);
    gl.vertexAttribPointer(
      positionAttributeLocation,
      size,
      type,
      normalize,
      stride,
      offset
    );

    //!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!TEXTURE CHANGE !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
    //Now we have to do this for color
    var colorAttributeLocation = gl.getAttribLocation(program, "texcord");
    //We don't have to bind because we already have the correct buffer bound.
    size = 2;
    type = gl.FLOAT;
    normalize = false;
    stride = 5 * Float32Array.BYTES_PER_ELEMENT; //Size in bytes of each element
    offset = 3 * Float32Array.BYTES_PER_ELEMENT; //size of the offset
    gl.enableVertexAttribArray(colorAttributeLocation);
    gl.vertexAttribPointer(
      colorAttributeLocation,
      size,
      type,
      normalize,
      stride,
      offset
    );

    gl.bindTexture(gl.TEXTURE_2D, this.MyTexture);
    //setup S
    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.REPEAT); //gl.MIRRORED_REPEAT//gl.CLAMP_TO_EDGE
    //Sets up our T
    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.REPEAT); //gl.MIRRORED_REPEAT//gl.CLAMP_TO_EDGE
    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);
    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);
    //!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

    var tranLoc = gl.getUniformLocation(program, "transform");
    gl.uniform3fv(tranLoc, new Float32Array(this.loc));
    var thetaLoc = gl.getUniformLocation(program, "rotation");
    gl.uniform3fv(thetaLoc, new Float32Array(this.rot));

    //var ibuffer = gl.createBuffer();
    //gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER,this.ibuffer);
    //gl.bufferData(gl.ELEMENT_ARRAY_BUFFER,new Uint8Array(this.indexOrder),gl.STATIC_DRAW);
    //gl.drawElements(gl.TRIANGLES,this.indexOrder.length,gl.UNSIGNED_BYTE,0);
    gl.drawArrays(gl.TRIANGLES, 0, 30);
  }


}

class Bullet extends GameObject {
  constructor() {
    super();
    this.name = "Bullet";
    this.buffer = gl.createBuffer();
    this.vel = [0, 0, 0];
    gl.bindBuffer(gl.ARRAY_BUFFER, this.buffer);
    this.collissionRadius = 0.05;
    this.vertices = [
      -.1, -.1, -.1, 0.0, 0.0,
      -.1, -.1, .1, 1.0, 0.0, 
      -.1, .1, .1, 1, 1,       
      -.1, -.1, -.1,0.0, 0.0,
      -.1, .1, .1, 1, 1,
      -.1, .1, -.1, 0.0, 1.0,

      -.1,-.1,.1,0.0,0.0,
      .1,.1,.1,1,1,
      -.1,.1,.1,0,1,
      -.1,-.1,.1,0,0,
      .1,-.1,.1,1,0,
      .1,.1,.1,1,1,

      .1,-.1,.1,0,0,
      .1,-.1,-.1,1,0,
      .1,.1,.1,0,1,
      .1,.1,.1,0,1,
      .1,-.1,-.1,1,0,
      .1,.1,-.1,1,1,

      .1,-.1,-.1,0,0,
      .1,.1,-.1,0,1,
      -.1,-.1,-.1,1,0,
      -.1,-.1,-.1,1,0,
      .1,.1,-.1,0,1,
      -.1,.1,-.1,1,1,

      .1,-.1,.1,1,0,
      -.1,-.1,.1,0,0,
      .1,-.1,-.1,1,1,
      .1,-.1,-.1,1,1,
      -.1,-.1,-.1,0,1,
      -.1,-.1,.1,1,0,

    ];
    this.isTrigger = false;
    gl.bufferData(
      gl.ARRAY_BUFFER,
      new Float32Array(this.vertices),
      gl.STATIC_DRAW
    );

    this.MyPicture = Global_Bullet;

    this.MyTexture = gl.createTexture();
    gl.bindTexture(gl.TEXTURE_2D, this.MyTexture);
    //We only want to do this once.
    gl.texImage2D(
      gl.TEXTURE_2D,
      0,
      gl.RGBA,
      32,
      32,
      0,
      gl.RGBA,
      gl.UNSIGNED_BYTE,
      new Uint8Array(this.MyPicture)
    );
  }

  OnCollision(other) {
    //console.log("Bullet hit " + other.name);
    if (other.name != "Bullet") {
        console.log("Bullet hit " + other.name);
        m.DestroyObject(this.id);
    }
  }

  Update() {
    this.Move();
  }
  Render(program) {
    var positionAttributeLocation = gl.getAttribLocation(program, "a_position");
    gl.bindBuffer(gl.ARRAY_BUFFER, this.buffer);
    var size = 3; // 2 components per iteration
    var type = gl.FLOAT; // the data is 32bit floats
    var normalize = false; // don't normalize the data

    //Make sure you change this to 5 for your TEXTURES
    var stride = 5 * Float32Array.BYTES_PER_ELEMENT; //Size in bytes of each element     // 0 = move forward size * sizeof(type) each iteration to get the next position
    var offset = 0; // start at the beginning of the buffer
    gl.enableVertexAttribArray(positionAttributeLocation);
    gl.vertexAttribPointer(
      positionAttributeLocation,
      size,
      type,
      normalize,
      stride,
      offset
    );

    //!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!TEXTURE CHANGE !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
    //Now we have to do this for color
    var colorAttributeLocation = gl.getAttribLocation(program, "texcord");
    //We don't have to bind because we already have the correct buffer bound.
    size = 2;
    type = gl.FLOAT;
    normalize = false;
    stride = 5 * Float32Array.BYTES_PER_ELEMENT; //Size in bytes of each element
    offset = 3 * Float32Array.BYTES_PER_ELEMENT; //size of the offset
    gl.enableVertexAttribArray(colorAttributeLocation);
    gl.vertexAttribPointer(
      colorAttributeLocation,
      size,
      type,
      normalize,
      stride,
      offset
    );

    gl.bindTexture(gl.TEXTURE_2D, this.MyTexture);
    //setup S
    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.REPEAT); //gl.MIRRORED_REPEAT//gl.CLAMP_TO_EDGE
    //Sets up our T
    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.REPEAT); //gl.MIRRORED_REPEAT//gl.CLAMP_TO_EDGE
    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);
    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);
    //!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

    var tranLoc = gl.getUniformLocation(program, "transform");
    gl.uniform3fv(tranLoc, new Float32Array(this.loc));
    var thetaLoc = gl.getUniformLocation(program, "rotation");
    gl.uniform3fv(thetaLoc, new Float32Array(this.rot));

    //var ibuffer = gl.createBuffer();
    //gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER,this.ibuffer);
    //gl.bufferData(gl.ELEMENT_ARRAY_BUFFER,new Uint8Array(this.indexOrder),gl.STATIC_DRAW);
    //gl.drawElements(gl.TRIANGLES,this.indexOrder.length,gl.UNSIGNED_BYTE,0);
    gl.drawArrays(gl.TRIANGLES, 0, 30);
  }

}


class RandEnemy extends GameObject {
  constructor() {
    super();
    this.angVelocity = [0, 0, 0];
    this.isTrigger = false;
    this.buffer = gl.createBuffer();
    this.collissionRadius = 0.25;
	  this.name ="Enemy"
    gl.bindBuffer(gl.ARRAY_BUFFER, this.buffer);

    this.maxHealth = 2;
    this.Health = this.maxHealth;
    //!!!!!!!!!!!!!!!!!Changes due to texture
    this.MyPicture = Global_Alien;

    //Get vertices from announcements
    this.vertices = [
      //X 	Y 	Z   S   T
      -1, -1, 0, 0, 1, 1, -1, 0, 1, 1, -1, 1, 0, 0, 0, 1, 1, 0, 1, 0,
    ];
		

    this.MyTexture = gl.createTexture();
    gl.bindTexture(gl.TEXTURE_2D, this.MyTexture);
    //We only want to do this once.
    gl.texImage2D(
      gl.TEXTURE_2D,
      0,
      gl.RGBA,
      32,
      32,
      0,
      gl.RGBA,
      gl.UNSIGNED_BYTE,
      new Uint8Array(this.MyPicture)
    );

    //!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

    gl.bufferData(
      gl.ARRAY_BUFFER,
      new Float32Array(this.vertices),
      gl.STATIC_DRAW
    );
    this.loc = [0, 0, 0];
    this.rot = [0, 0, 0];

		this.vel = [m.randf(-.05,.05),0,m.randf(-.05,.05)];	
		
  }
  Update() {

		this.loc[0] += this.vel[0];
		this.loc[2] += this.vel[2];

   // console.log(this.loc[0] + " Alien " + this.loc[2] + " " + this.vel[0] + " " + this.vel[2]);
		this.Move();

    if (this.Health <= 0) {
      m.OnEnemyDiesSound.play();
      m.DestroyObject(this.id);
    }



  }
  Render(program) {
    var positionAttributeLocation = gl.getAttribLocation(program, "a_position");
    gl.bindBuffer(gl.ARRAY_BUFFER, this.buffer);
    var size = 3; // 2 components per iteration
    var type = gl.FLOAT; // the data is 32bit floats
    var normalize = false; // don't normalize the data

    //Make sure you change this to 5 for your TEXTURES
    var stride = 5 * Float32Array.BYTES_PER_ELEMENT; //Size in bytes of each element     // 0 = move forward size * sizeof(type) each iteration to get the next position
    var offset = 0; // start at the beginning of the buffer
    gl.enableVertexAttribArray(positionAttributeLocation);
    gl.vertexAttribPointer(
      positionAttributeLocation,
      size,
      type,
      normalize,
      stride,
      offset
    );

    //!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!TEXTURE CHANGE !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
    //Now we have to do this for color
    var colorAttributeLocation = gl.getAttribLocation(program, "texcord");
    //We don't have to bind because we already have the correct buffer bound.
    size = 2;
    type = gl.FLOAT;
    normalize = false;
    stride = 5 * Float32Array.BYTES_PER_ELEMENT; //Size in bytes of each element
    offset = 3 * Float32Array.BYTES_PER_ELEMENT; //size of the offset
    gl.enableVertexAttribArray(colorAttributeLocation);
    gl.vertexAttribPointer(
      colorAttributeLocation,
      size,
      type,
      normalize,
      stride,
      offset
    );

    gl.bindTexture(gl.TEXTURE_2D, this.MyTexture);
    //setup S
    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.REPEAT); //gl.MIRRORED_REPEAT//gl.CLAMP_TO_EDGE
    //Sets up our T
    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.REPEAT); //gl.MIRRORED_REPEAT//gl.CLAMP_TO_EDGE
    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);
    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);
    //!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

    var tranLoc = gl.getUniformLocation(program, "transform");
    gl.uniform3fv(tranLoc, new Float32Array(this.loc));
    var thetaLoc = gl.getUniformLocation(program, "rotation");
    gl.uniform3fv(thetaLoc, new Float32Array(this.rot));

    var FaceCamLoc = gl.getUniformLocation(program, "FaceCam");
    gl.uniform1i(FaceCamLoc, true);

    //var ibuffer = gl.createBuffer();
    //gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER,this.ibuffer);
    //gl.bufferData(gl.ELEMENT_ARRAY_BUFFER,new Uint8Array(this.indexOrder),gl.STATIC_DRAW);
    //gl.drawElements(gl.TRIANGLES,this.indexOrder.length,gl.UNSIGNED_BYTE,0);
    gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);

    gl.uniform1i(FaceCamLoc, false);
  }

  OnCollision(other) {
    if(other.name == "Wall"){
		  this.vel = [m.randf(-.05,.05),0,m.randf(-.05,.05)];	
    }
    if(other.name == "Bullet" || other.name == "PlayerBullet"){
      this.Health--;
      m.HitSound.play();
      m.DestroyObject(other.id);
    }



  }
}


class PathEnemy extends GameObject {
  constructor() {
    super();
    this.angVelocity = [0, 0, 0];
    this.isTrigger = false;
    this.buffer = gl.createBuffer();
    this.collissionRadius = 0.25;
	this.name ="Enemy"
    gl.bindBuffer(gl.ARRAY_BUFFER, this.buffer);

    this.maxHealth = 3;
    this.Health = this.maxHealth;

    //!!!!!!!!!!!!!!!!!Changes due to texture
    this.MyPicture = Global_Army;

    //Get vertices from announcements
    this.vertices = [
      //X 	Y 	Z   S   T
      -1, -1, 0, 0, 1, 1, -1, 0, 1, 1, -1, 1, 0, 0, 0, 1, 1, 0, 1, 0,
    ];

    this.MyTexture = gl.createTexture();
    gl.bindTexture(gl.TEXTURE_2D, this.MyTexture);
    //We only want to do this once.
    gl.texImage2D(
      gl.TEXTURE_2D,
      0,
      gl.RGBA,
      32,
      32,
      0,
      gl.RGBA,
      gl.UNSIGNED_BYTE,
      new Uint8Array(this.MyPicture)
    );

    //!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

    gl.bufferData(
      gl.ARRAY_BUFFER,
      new Float32Array(this.vertices),
      gl.STATIC_DRAW
    );
    this.loc = [0, 0, 0];
    this.rot = [0, 0, 0];
    this.vel = [.1, 0, .1];
  }
  Update() {
    this.loc[0] += this.vel[0];
    this.loc[2] += this.vel[2];
    this.Move();



    if (this.Health <= 0) {
      m.OnEnemyDiesSound.play();
      m.DestroyObject(this.id);
    }
  }
  Render(program) {
    var positionAttributeLocation = gl.getAttribLocation(program, "a_position");
    gl.bindBuffer(gl.ARRAY_BUFFER, this.buffer);
    var size = 3; // 2 components per iteration
    var type = gl.FLOAT; // the data is 32bit floats
    var normalize = false; // don't normalize the data

    //Make sure you change this to 5 for your TEXTURES
    var stride = 5 * Float32Array.BYTES_PER_ELEMENT; //Size in bytes of each element     // 0 = move forward size * sizeof(type) each iteration to get the next position
    var offset = 0; // start at the beginning of the buffer
    gl.enableVertexAttribArray(positionAttributeLocation);
    gl.vertexAttribPointer(
      positionAttributeLocation,
      size,
      type,
      normalize,
      stride,
      offset
    );

    //!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!TEXTURE CHANGE !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
    //Now we have to do this for color
    var colorAttributeLocation = gl.getAttribLocation(program, "texcord");
    //We don't have to bind because we already have the correct buffer bound.
    size = 2;
    type = gl.FLOAT;
    normalize = false;
    stride = 5 * Float32Array.BYTES_PER_ELEMENT; //Size in bytes of each element
    offset = 3 * Float32Array.BYTES_PER_ELEMENT; //size of the offset
    gl.enableVertexAttribArray(colorAttributeLocation);
    gl.vertexAttribPointer(
      colorAttributeLocation,
      size,
      type,
      normalize,
      stride,
      offset
    );

    gl.bindTexture(gl.TEXTURE_2D, this.MyTexture);
    //setup S
    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.REPEAT); //gl.MIRRORED_REPEAT//gl.CLAMP_TO_EDGE
    //Sets up our T
    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.REPEAT); //gl.MIRRORED_REPEAT//gl.CLAMP_TO_EDGE
    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);
    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);
    //!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

    var tranLoc = gl.getUniformLocation(program, "transform");
    gl.uniform3fv(tranLoc, new Float32Array(this.loc));
    var thetaLoc = gl.getUniformLocation(program, "rotation");
    gl.uniform3fv(thetaLoc, new Float32Array(this.rot));

    var FaceCamLoc = gl.getUniformLocation(program, "FaceCam");
    gl.uniform1i(FaceCamLoc, true);

    //var ibuffer = gl.createBuffer();
    //gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER,this.ibuffer);
    //gl.bufferData(gl.ELEMENT_ARRAY_BUFFER,new Uint8Array(this.indexOrder),gl.STATIC_DRAW);
    //gl.drawElements(gl.TRIANGLES,this.indexOrder.length,gl.UNSIGNED_BYTE,0);
    gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);

    gl.uniform1i(FaceCamLoc, false);
  }

  OnCollision(other) {
    if(other.name == "Bullet" || other.name == "PlayerBullet"){
      this.Health--;
      m.DestroyObject(other.id);
      m.HitSound.play();
    }

    if(other.name == "Wall"){
      this.vel[0] *= -1;
      this.vel[2] *= -1;

    }
  }
}


class TankEnemy extends GameObject {
  constructor() {
    super();
    this.angVelocity = [0, 0, 0];
    this.isTrigger = false;
    this.buffer = gl.createBuffer();
    this.collissionRadius = 0.25;
	  this.name ="Enemy"
    gl.bindBuffer(gl.ARRAY_BUFFER, this.buffer);

    this.maxHealth = 4;
    this.Health = this.maxHealth;


    this.ShootTimerMax = 100;
    this.ShootTimer = this.ShootTimerMax;
    this.canShoot = true;
    this.animationTimer = 0;
    //!!!!!!!!!!!!!!!!!Changes due to texture
    this.MyPicture = Global_Tank;

    //Get vertices from announcements
    this.vertices = [
      //X 	Y 	Z   S   T
      -1, -1, 0, 0, 1, 1, -1, 0, 1, 1, -1, 1, 0, 0, 0, 1, 1, 0, 1, 0,
    ];

    
		this.vel = [m.randf(-.01,.01),0,m.randf(-.01,.01)];	
    this.MyTexture = gl.createTexture();
    gl.bindTexture(gl.TEXTURE_2D, this.MyTexture);
    //We only want to do this once.
    gl.texImage2D(
      gl.TEXTURE_2D,
      0,
      gl.RGBA,
      16,
      16,
      0,
      gl.RGBA,
      gl.UNSIGNED_BYTE,
      new Uint8Array(this.MyPicture)
    );

    //!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

    gl.bufferData(
      gl.ARRAY_BUFFER,
      new Float32Array(this.vertices),
      gl.STATIC_DRAW
    );
    this.loc = [0, 0, 0];
    this.rot = [0, 0, 0];
  }

  normalize(vect){
    var mag = Math.sqrt(vect[0]*vect[0] + vect[1]*vect[1] + vect[2]*vect[2]);
    return [vect[0]/mag,vect[1]/mag,vect[2]/mag];
  }

  Update() {
    this.loc[0] += this.vel[0];
    this.loc[2] += this.vel[2];
    this.Move();

    console.log(this.animationTimer + " ANIMATION ")
    this.animationTimer += 1;
    if (this.animationTimer %3 ==0) {  
      this.MyPicture = Global_Tank;
    }else if(this.animationTimer % 6 ==0){
      console.log("here")
      this.MyPicture = Global_Tank1;
    }else if(this.animationTimer >= 10){
      this.animationTimer = 0;
      this.MyPicture = Global_Tank2;
    }

    
    /*
      player position - enemy pos = delta pos
      normalize(delta pos)


      mag function

    */
    if(this.ShootTimer >= this.ShootTimerMax && !(this.canShoot)){
			this.canShoot = true;
      this.ShootTimer = 0;
		}else if(this.canShoot == false){
			this.ShootTimer++;
		}

    if(this.canShoot){
      this.canShoot = false;

      this.transform.doRotations(this.rot);
      var temp = m.CreateObject(
        1,
        Bullet,
        [this.loc[0], this.loc[1]-.5, this.loc[2]],
        [0, 0, 0]
      );

      this.transform.doRotations(this.rot);
      var vect = [0,0,0];
      for (let i = 0; i < 3; i++) {
        //temp.velocity[i] = this.transform.forward[i] * .5;
        console.log( m.player.loc[i])
        
        vect[i] =  (m.player.loc[i]-this.loc[i]);
        if(i==1){
          vect[i] =  0;
        }
      }    
       this.normalize(vect)
      for (let i = 0; i < 3; i++) {
        temp.velocity[i] = vect[i] * .01;
      }
       temp.isTrigger = true;
    }

    if (this.Health <= 0) {
      
      m.OnEnemyDiesSound.play();
      m.DestroyObject(this.id);
    }
  }
  Render(program) {
    var positionAttributeLocation = gl.getAttribLocation(program, "a_position");
    gl.bindBuffer(gl.ARRAY_BUFFER, this.buffer);
    var size = 3; // 2 components per iteration
    var type = gl.FLOAT; // the data is 32bit floats
    var normalize = false; // don't normalize the data

    //Make sure you change this to 5 for your TEXTURES
    var stride = 5 * Float32Array.BYTES_PER_ELEMENT; //Size in bytes of each element     // 0 = move forward size * sizeof(type) each iteration to get the next position
    var offset = 0; // start at the beginning of the buffer
    gl.enableVertexAttribArray(positionAttributeLocation);
    gl.vertexAttribPointer(
      positionAttributeLocation,
      size,
      type,
      normalize,
      stride,
      offset
    );

    //!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!TEXTURE CHANGE !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
    //Now we have to do this for color
    var colorAttributeLocation = gl.getAttribLocation(program, "texcord");
    //We don't have to bind because we already have the correct buffer bound.
    size = 2;
    type = gl.FLOAT;
    normalize = false;
    stride = 5 * Float32Array.BYTES_PER_ELEMENT; //Size in bytes of each element
    offset = 3 * Float32Array.BYTES_PER_ELEMENT; //size of the offset
    gl.enableVertexAttribArray(colorAttributeLocation);
    gl.vertexAttribPointer(
      colorAttributeLocation,
      size,
      type,
      normalize,
      stride,
      offset
    );

    gl.bindTexture(gl.TEXTURE_2D, this.MyTexture);
    //setup S
    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.REPEAT); //gl.MIRRORED_REPEAT//gl.CLAMP_TO_EDGE
    //Sets up our T
    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.REPEAT); //gl.MIRRORED_REPEAT//gl.CLAMP_TO_EDGE
    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);
    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);
    //!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

    var tranLoc = gl.getUniformLocation(program, "transform");
    gl.uniform3fv(tranLoc, new Float32Array(this.loc));
    var thetaLoc = gl.getUniformLocation(program, "rotation");
    gl.uniform3fv(thetaLoc, new Float32Array(this.rot));

    var FaceCamLoc = gl.getUniformLocation(program, "FaceCam");
    gl.uniform1i(FaceCamLoc, true);

    //var ibuffer = gl.createBuffer();
    //gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER,this.ibuffer);
    //gl.bufferData(gl.ELEMENT_ARRAY_BUFFER,new Uint8Array(this.indexOrder),gl.STATIC_DRAW);
    //gl.drawElements(gl.TRIANGLES,this.indexOrder.length,gl.UNSIGNED_BYTE,0);
    gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);

    gl.uniform1i(FaceCamLoc, false);
  }

  OnCollision(other) {
    if(other.name == "Wall"){
      this.vel[0] = -this.vel[0];
      this.vel[2] = -this.vel[2];

    }
    if( other.name == "PlayerBullet"){
      this.Health--;

      m.HitSound.play();
      console.log("BULLET " + this.Health);
      m.DestroyObject(other.id);
    }
  }
}

class BossEnemy extends GameObject {
  constructor() {
    super();
    this.angVelocity = [0, 0, 0];
    this.isTrigger = false;
    this.buffer = gl.createBuffer();
    this.collissionRadius = 0.4;
	this.name ="Enemy"
    gl.bindBuffer(gl.ARRAY_BUFFER, this.buffer);

    this.maxHealth = 10;
    this.Health = this.maxHealth;


    this.ShootTimerMax = 30;
    this.ShootTimer = this.ShootTimerMax;
    this.canShoot = true;

    //!!!!!!!!!!!!!!!!!Changes due to texture
    this.MyPicture = Global_Tank;

    //Get vertices from announcements
    this.vertices = [
      //X 	Y 	Z   S   T
      -2, -2, 0, 0,
      2, 2, -1, 0,
      2, 2, -1, 1,
         0, 0, 0, 1,
         2, 0, 1, 0,
    ];

    
		this.vel = [m.randf(-.01,.01),0,m.randf(-.01,.01)];	
    this.MyTexture = gl.createTexture();
    gl.bindTexture(gl.TEXTURE_2D, this.MyTexture);
    //We only want to do this once.
    gl.texImage2D(
      gl.TEXTURE_2D,
      0,
      gl.RGBA,
      16,
      16,
      0,
      gl.RGBA,
      gl.UNSIGNED_BYTE,
      new Uint8Array(this.MyPicture)
    );

    //!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

    gl.bufferData(
      gl.ARRAY_BUFFER,
      new Float32Array(this.vertices),
      gl.STATIC_DRAW
    );
    this.loc = [0, 0, 0];
    this.rot = [0, 0, 0];
  }
  Update() {
    this.loc[0] += this.vel[0];
    this.loc[2] += this.vel[2];
    this.Move();

    if(this.canShoot){
      
			//var temp = m.CreateObject(2,Bullet,[this.loc[0],this.loc[1],this.loc[2]],[this.rot[0],this.rot[1],this.rot[2]]);
      //m.CreateObject(new Bullet(this.loc[0],this.loc[1],this.loc[2],this.rot[0],this.rot[1],this.rot[2]));
      //temp.vel = this.vel;
      //this.canShoot = false;


    }else if(this.ShootTimer > 0){
      this.ShootTimer--;
    }

    if(this.ShootTimer < 0){
      this.canShoot = true;
      this.ShootTimer = this.ShootTimerMax;
    }

    if (this.Health <= 0) {
      
      m.OnEnemyDiesSound.play();
      m.DestroyObject(this.id);
    }
  }
  Render(program) {
    var positionAttributeLocation = gl.getAttribLocation(program, "a_position");
    gl.bindBuffer(gl.ARRAY_BUFFER, this.buffer);
    var size = 3; // 2 components per iteration
    var type = gl.FLOAT; // the data is 32bit floats
    var normalize = false; // don't normalize the data

    //Make sure you change this to 5 for your TEXTURES
    var stride = 5 * Float32Array.BYTES_PER_ELEMENT; //Size in bytes of each element     // 0 = move forward size * sizeof(type) each iteration to get the next position
    var offset = 0; // start at the beginning of the buffer
    gl.enableVertexAttribArray(positionAttributeLocation);
    gl.vertexAttribPointer(
      positionAttributeLocation,
      size,
      type,
      normalize,
      stride,
      offset
    );

    //!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!TEXTURE CHANGE !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
    //Now we have to do this for color
    var colorAttributeLocation = gl.getAttribLocation(program, "texcord");
    //We don't have to bind because we already have the correct buffer bound.
    size = 2;
    type = gl.FLOAT;
    normalize = false;
    stride = 5 * Float32Array.BYTES_PER_ELEMENT; //Size in bytes of each element
    offset = 3 * Float32Array.BYTES_PER_ELEMENT; //size of the offset
    gl.enableVertexAttribArray(colorAttributeLocation);
    gl.vertexAttribPointer(
      colorAttributeLocation,
      size,
      type,
      normalize,
      stride,
      offset
    );

    gl.bindTexture(gl.TEXTURE_2D, this.MyTexture);
    //setup S
    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.REPEAT); //gl.MIRRORED_REPEAT//gl.CLAMP_TO_EDGE
    //Sets up our T
    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.REPEAT); //gl.MIRRORED_REPEAT//gl.CLAMP_TO_EDGE
    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);
    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);
    //!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

    var tranLoc = gl.getUniformLocation(program, "transform");
    gl.uniform3fv(tranLoc, new Float32Array(this.loc));
    var thetaLoc = gl.getUniformLocation(program, "rotation");
    gl.uniform3fv(thetaLoc, new Float32Array(this.rot));

    var FaceCamLoc = gl.getUniformLocation(program, "FaceCam");
    gl.uniform1i(FaceCamLoc, true);

    //var ibuffer = gl.createBuffer();
    //gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER,this.ibuffer);
    //gl.bufferData(gl.ELEMENT_ARRAY_BUFFER,new Uint8Array(this.indexOrder),gl.STATIC_DRAW);
    //gl.drawElements(gl.TRIANGLES,this.indexOrder.length,gl.UNSIGNED_BYTE,0);
    gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);

    gl.uniform1i(FaceCamLoc, false);
  }

  OnCollision(other) {
    if(other.name == "Wall"){
      this.vel[0] = -this.vel[0];
      this.vel[2] = -this.vel[2];

    }
    if(other.name == "Bullet"){
      this.Health--;

      console.log("BULLET " + this.Health);
      m.DestroyObject(other.id);
    }
  }
}

class PointLight extends GameObject
{
	constructor()
	{
		super();
		this.isTrigger = true;
		//set loc
		this.pointStr = "";



    this.loc = [0, 0, 0];
    this.rot = [0, 0, 0];
	}
	
	Update()
	{
		//set velocity
		this.Move();
	}
	
	Render(program)
	{


		var tranLoc  = gl.getUniformLocation(program, this.pointStr);
		gl.uniform3fv(tranLoc,new Float32Array(this.loc));
	}
}






